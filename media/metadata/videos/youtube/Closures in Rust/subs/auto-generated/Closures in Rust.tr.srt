1
00:00:00,560 --> 00:00:02,629

tekrar hoşgeldiniz russ çetesi

2
00:00:02,629 --> 00:00:02,639
tekrar hoşgeldiniz russ çetesi
 

3
00:00:02,639 --> 00:00:04,630
tekrar hoşgeldiniz russ çetesi
burada yeniyseniz benim adım bogdan ve bu kanal

4
00:00:04,630 --> 00:00:05,829
burada yeniyseniz benim adım bogdan ve bu kanal
 

5
00:00:05,829 --> 00:00:05,839

 

6
00:00:05,839 --> 00:00:07,990

tamamen pas programlama dili ile ilgili

7
00:00:07,990 --> 00:00:08,000
tamamen pas programlama dili ile ilgili
 

8
00:00:08,000 --> 00:00:10,070
tamamen pas programlama dili ile ilgili
son videomuzda

9
00:00:10,070 --> 00:00:11,350
son videomuzda
 

10
00:00:11,350 --> 00:00:11,360

 

11
00:00:11,360 --> 00:00:14,390

cli programı oluşturduğumuz güreş kitabının 12. bölümünü

12
00:00:14,390 --> 00:00:14,400
cli programı oluşturduğumuz güreş kitabının 12. bölümünü
 

13
00:00:14,400 --> 00:00:16,470
cli programı oluşturduğumuz güreş kitabının 12. bölümünü
geçtik bu videoda  13. bölümün üzerinden

14
00:00:16,470 --> 00:00:16,480
geçtik bu videoda  13. bölümün üzerinden
 

15
00:00:16,480 --> 00:00:17,830
geçtik bu videoda  13. bölümün üzerinden
özellikle

16
00:00:17,830 --> 00:00:17,840
özellikle
 

17
00:00:17,840 --> 00:00:20,310
özellikle
13. bölümün 1. bölümünün üzerinde

18
00:00:20,310 --> 00:00:20,320
13. bölümün 1. bölümünün üzerinde
 

19
00:00:20,320 --> 00:00:21,109
13. bölümün 1. bölümünün üzerinde

20
00:00:21,109 --> 00:00:21,119

 

21
00:00:21,119 --> 00:00:30,550

kapanışlar hakkında konuşacağız, bu yüzden öncelikle paslı olalım

22
00:00:30,550 --> 00:00:30,560
kapanışlar hakkında konuşacağız, bu yüzden öncelikle paslı olalım
 

23
00:00:30,560 --> 00:00:33,270
kapanışlar hakkında konuşacağız, bu yüzden öncelikle paslı olalım
, kapanışlar nedir,

24
00:00:33,270 --> 00:00:33,280
, kapanışlar nedir,
 

25
00:00:33,280 --> 00:00:34,470
, kapanışlar nedir,
kapanışlar işlev gibidir,

26
00:00:34,470 --> 00:00:34,480
kapanışlar işlev gibidir,
 

27
00:00:34,480 --> 00:00:36,150
kapanışlar işlev gibidir,
ancak anonimdirler,

28
00:00:36,150 --> 00:00:36,160
ancak anonimdirler,
 

29
00:00:36,160 --> 00:00:37,830
ancak anonimdirler,
yani adları yoktur.

30
00:00:37,830 --> 00:00:37,840
yani adları yoktur.
 

31
00:00:37,840 --> 00:00:40,150
yani adları yoktur.
değişkenler olarak saklanabilir ve

32
00:00:40,150 --> 00:00:41,030
değişkenler olarak saklanabilir ve
 

33
00:00:41,030 --> 00:00:41,040

 

34
00:00:41,040 --> 00:00:43,270

çevrelerinden geçirilebilirler, hatta

35
00:00:43,270 --> 00:00:43,280
çevrelerinden geçirilebilirler, hatta
 

36
00:00:43,280 --> 00:00:44,150
çevrelerinden geçirilebilirler, hatta

37
00:00:44,150 --> 00:00:44,160

 

38
00:00:44,160 --> 00:00:46,549

bir fonksiyona giriş parametreleri olarak geçirilebilirler ve bunlar,

39
00:00:46,549 --> 00:00:46,559
bir fonksiyona giriş parametreleri olarak geçirilebilirler ve bunlar,
 

40
00:00:46,559 --> 00:00:47,590
bir fonksiyona giriş parametreleri olarak geçirilebilirler ve bunlar,

41
00:00:47,590 --> 00:00:50,150

 

42
00:00:50,150 --> 00:00:50,160

 

43
00:00:50,160 --> 00:00:50,950


44
00:00:50,950 --> 00:00:50,960

 

45
00:00:50,960 --> 00:00:53,029

kapanışları daha iyi anlamak için tanımlandıkları kapsam içindeki değişkenleri yakalarlar,

46
00:00:53,029 --> 00:00:53,039
kapanışları daha iyi anlamak için tanımlandıkları kapsam içindeki değişkenleri yakalarlar,
 

47
00:00:53,039 --> 00:00:54,389
kapanışları daha iyi anlamak için tanımlandıkları kapsam içindeki değişkenleri yakalarlar,
bunları aşağıdaki örnekte kullanacağız,

48
00:00:54,389 --> 00:00:54,399
bunları aşağıdaki örnekte kullanacağız,
 

49
00:00:54,399 --> 00:00:56,470
bunları aşağıdaki örnekte kullanacağız,
sizi hayal edin'

50
00:00:56,470 --> 00:00:56,480
sizi hayal edin'
 

51
00:00:56,480 --> 00:00:58,389
sizi hayal edin'
bir fitness uygulaması

52
00:00:58,389 --> 00:00:58,399
bir fitness uygulaması
 

53
00:00:58,399 --> 00:01:00,950
bir fitness uygulaması
için arka uç yeniden inşa edildi ve arka uç paslandı,

54
00:01:00,950 --> 00:01:00,960
için arka uç yeniden inşa edildi ve arka uç paslandı,
 

55
00:01:00,960 --> 00:01:02,790
için arka uç yeniden inşa edildi ve arka uç paslandı,
fitness uygulaması,

56
00:01:02,790 --> 00:01:02,800
fitness uygulaması,
 

57
00:01:02,800 --> 00:01:04,390
fitness uygulaması,
bir kullanıcı

58
00:01:04,390 --> 00:01:04,400
bir kullanıcı
 

59
00:01:04,400 --> 00:01:07,109
bir kullanıcı
için yaş

60
00:01:07,109 --> 00:01:07,119
için yaş
 

61
00:01:07,119 --> 00:01:07,910
için yaş
vücut kitle

62
00:01:07,910 --> 00:01:07,920
vücut kitle
 

63
00:01:07,920 --> 00:01:11,190
vücut kitle
indeksi antrenman tercihi gibi çeşitli faktörlere dayalı olarak özelleştirilmiş antrenmanlar üretecek  şimdi bu algoritmanın

64
00:01:11,190 --> 00:01:11,200
indeksi antrenman tercihi gibi çeşitli faktörlere dayalı olarak özelleştirilmiş antrenmanlar üretecek  şimdi bu algoritmanın
 

65
00:01:11,200 --> 00:01:12,149
indeksi antrenman tercihi gibi çeşitli faktörlere dayalı olarak özelleştirilmiş antrenmanlar üretecek  şimdi bu algoritmanın

66
00:01:12,149 --> 00:01:14,310

 

67
00:01:14,310 --> 00:01:14,320

 

68
00:01:14,320 --> 00:01:15,670

uygulanması o kadar önemli

69
00:01:15,670 --> 00:01:15,680
uygulanması o kadar önemli
 

70
00:01:15,680 --> 00:01:17,270
uygulanması o kadar önemli
değil önemli olan bu

71
00:01:17,270 --> 00:01:17,280
değil önemli olan bu
 

72
00:01:17,280 --> 00:01:19,510
değil önemli olan bu
algoritmanın bir parçasının

73
00:01:19,510 --> 00:01:19,520
algoritmanın bir parçasının
 

74
00:01:19,520 --> 00:01:21,590
algoritmanın bir parçasının
pahalı olan ve çalıştırılması birkaç saniye süren bir

75
00:01:21,590 --> 00:01:23,109
pahalı olan ve çalıştırılması birkaç saniye süren bir
 

76
00:01:23,109 --> 00:01:23,119

 

77
00:01:23,119 --> 00:01:25,510

hesaplama yapmasıdır burada bu hesaplamayı simüle

78
00:01:25,510 --> 00:01:25,520
hesaplama yapmasıdır burada bu hesaplamayı simüle
 

79
00:01:25,520 --> 00:01:26,630
hesaplama yapmasıdır burada bu hesaplamayı simüle
edilmiş pahalı adlı bir fonksiyonla simüle ettik

80
00:01:26,630 --> 00:01:29,749
edilmiş pahalı adlı bir fonksiyonla simüle ettik
 

81
00:01:29,749 --> 00:01:30,310

 

82
00:01:30,310 --> 00:01:30,320

 

83
00:01:30,320 --> 00:01:32,630

bir yoğunluğu alan ve ardından çıktısını alan

84
00:01:32,630 --> 00:01:32,640
bir yoğunluğu alan ve ardından çıktısını alan
 

85
00:01:32,640 --> 00:01:34,390
bir yoğunluğu alan ve ardından çıktısını alan
hesaplama yavaşça hesaplama

86
00:01:34,390 --> 00:01:34,400
hesaplama yavaşça hesaplama
 

87
00:01:34,400 --> 00:01:36,710
hesaplama yavaşça hesaplama
ipliğin iki saniye uyumasına izin

88
00:01:36,710 --> 00:01:36,720
ipliğin iki saniye uyumasına izin
 

89
00:01:36,720 --> 00:01:38,950
ipliğin iki saniye uyumasına izin
verir ve yoğunluğu geri verir

90
00:01:38,950 --> 00:01:38,960
verir ve yoğunluğu geri verir
 

91
00:01:38,960 --> 00:01:41,030
verir ve yoğunluğu geri verir
şimdi burada maine'de

92
00:01:41,030 --> 00:01:42,230
şimdi burada maine'de
 

93
00:01:42,230 --> 00:01:42,240

 

94
00:01:42,240 --> 00:01:44,870

kullanıcı yeni bir antrenman isterse çağrılacak kodu simüle ediyoruz antrenman oluştur diyoruz

95
00:01:44,870 --> 00:01:44,880
kullanıcı yeni bir antrenman isterse çağrılacak kodu simüle ediyoruz antrenman oluştur diyoruz
 

96
00:01:44,880 --> 00:01:46,710
kullanıcı yeni bir antrenman isterse çağrılacak kodu simüle ediyoruz antrenman oluştur diyoruz
Bu,

97
00:01:46,710 --> 00:01:46,720
Bu,
 

98
00:01:46,720 --> 00:01:48,630
Bu,
henüz

99
00:01:48,630 --> 00:01:48,640
henüz
 

100
00:01:48,640 --> 00:01:50,310
henüz
oluşturmadığımız ve antrenman oluşturmadığımız bir fonksiyondur

101
00:01:50,310 --> 00:01:50,320
oluşturmadığımız ve antrenman oluşturmadığımız bir fonksiyondur
 

102
00:01:50,320 --> 00:01:52,710
oluşturmadığımız ve antrenman oluşturmadığımız bir fonksiyondur
, bir kullanıcının belirlediği yoğunluk

103
00:01:52,710 --> 00:01:52,720
, bir kullanıcının belirlediği yoğunluk
 

104
00:01:52,720 --> 00:01:53,670
, bir kullanıcının belirlediği yoğunluk

105
00:01:53,670 --> 00:01:53,680

 

106
00:01:53,680 --> 00:01:55,830

ve şimdi oluşturulan antrenmana biraz çeşitlilik sağlamak için rastgele bir sayı olmak üzere iki parametre alır,

107
00:01:55,830 --> 00:01:58,149
ve şimdi oluşturulan antrenmana biraz çeşitlilik sağlamak için rastgele bir sayı olmak üzere iki parametre alır,
 

108
00:01:58,149 --> 00:01:58,159

 

109
00:01:58,159 --> 00:01:59,990

çünkü

110
00:01:59,990 --> 00:02:00,000
çünkü
 

111
00:02:00,000 --> 00:02:01,830
çünkü
bu örnekte aslında ön ucu oluşturmuyoruz.

112
00:02:01,830 --> 00:02:01,840
bu örnekte aslında ön ucu oluşturmuyoruz.
 

113
00:02:01,840 --> 00:02:04,469
bu örnekte aslında ön ucu oluşturmuyoruz.
Simüle edilmiş 10 yoğunlukta geçeceğiz

114
00:02:04,469 --> 00:02:04,479
Simüle edilmiş 10 yoğunlukta geçeceğiz
 

115
00:02:04,479 --> 00:02:05,030
Simüle edilmiş 10 yoğunlukta geçeceğiz

116
00:02:05,030 --> 00:02:05,040

 

117
00:02:05,040 --> 00:02:07,109

ve rasgele sayı

118
00:02:07,109 --> 00:02:07,119
ve rasgele sayı
 

119
00:02:07,119 --> 00:02:08,949
ve rasgele sayı
için rand kasasını kullanabilir ve aslında

120
00:02:08,949 --> 00:02:08,959
için rand kasasını kullanabilir ve aslında
 

121
00:02:08,959 --> 00:02:09,749
için rand kasasını kullanabilir ve aslında
rasgele bir sayı üretebiliriz

122
00:02:09,749 --> 00:02:09,759
rasgele bir sayı üretebiliriz
 

123
00:02:09,759 --> 00:02:11,510
rasgele bir sayı üretebiliriz
ama yine bu hayır  t Bu örnekteki odak noktamız, bu

124
00:02:11,510 --> 00:02:11,520
ama yine bu hayır  t Bu örnekteki odak noktamız, bu
 

125
00:02:11,520 --> 00:02:13,589
ama yine bu hayır  t Bu örnekteki odak noktamız, bu
nedenle rastgele

126
00:02:13,589 --> 00:02:13,599
nedenle rastgele
 

127
00:02:13,599 --> 00:02:15,350
nedenle rastgele
sayıyı sabit kodlanmış

128
00:02:15,350 --> 00:02:15,360
sayıyı sabit kodlanmış
 

129
00:02:15,360 --> 00:02:17,670
sayıyı sabit kodlanmış
yedi olarak ayarlayacağız, ardından oluşturulan

130
00:02:17,670 --> 00:02:17,680
yedi olarak ayarlayacağız, ardından oluşturulan
 

131
00:02:17,680 --> 00:02:18,869
yedi olarak ayarlayacağız, ardından oluşturulan
egzersiz işlevini, ana oluşturma egzersiz işlevinin

132
00:02:18,869 --> 00:02:18,879
egzersiz işlevini, ana oluşturma egzersiz işlevinin
 

133
00:02:18,879 --> 00:02:21,990
egzersiz işlevini, ana oluşturma egzersiz işlevinin
hemen altında tanımlayacağız,

134
00:02:21,990 --> 00:02:23,990
hemen altında tanımlayacağız,
 

135
00:02:23,990 --> 00:02:24,000

 

136
00:02:24,000 --> 00:02:25,910

yoğunluk ve

137
00:02:25,910 --> 00:02:25,920
yoğunluk ve
 

138
00:02:25,920 --> 00:02:28,630
yoğunluk ve
yoğunluk 25'ten azsa rastgele bir sayı alır.  kaç tane şınav ve kurulum

139
00:02:28,630 --> 00:02:28,640
yoğunluk 25'ten azsa rastgele bir sayı alır.  kaç tane şınav ve kurulum
 

140
00:02:28,640 --> 00:02:30,710
yoğunluk 25'ten azsa rastgele bir sayı alır.  kaç tane şınav ve kurulum
yapacağımızı bulmak için x sayıda

141
00:02:30,710 --> 00:02:30,720
yapacağımızı bulmak için x sayıda
 

142
00:02:30,720 --> 00:02:33,030
yapacağımızı bulmak için x sayıda
şınav ve x sayıda mekik yazdırıyoruz

143
00:02:33,030 --> 00:02:34,949
şınav ve x sayıda mekik yazdırıyoruz
 

144
00:02:34,949 --> 00:02:34,959

 

145
00:02:34,959 --> 00:02:37,990

,

146
00:02:37,990 --> 00:02:38,000
,
 

147
00:02:38,000 --> 00:02:39,910
,
yoğunluk 25'in

148
00:02:39,910 --> 00:02:39,920
yoğunluk 25'in
 

149
00:02:39,920 --> 00:02:42,710
yoğunluk 25'in
üzerindeyse pahalı hesaplamamızı diyoruz ve burada else cümleciğine giriyoruz.

150
00:02:42,710 --> 00:02:42,720
üzerindeyse pahalı hesaplamamızı diyoruz ve burada else cümleciğine giriyoruz.
 

151
00:02:42,720 --> 00:02:43,030
üzerindeyse pahalı hesaplamamızı diyoruz ve burada else cümleciğine giriyoruz.

152
00:02:43,030 --> 00:02:43,040

 

153
00:02:43,040 --> 00:02:45,750

rasgele sayımızı tam olarak üç ise kontrol edin

154
00:02:45,750 --> 00:02:45,760
rasgele sayımızı tam olarak üç ise kontrol edin
 

155
00:02:45,760 --> 00:02:47,509
rasgele sayımızı tam olarak üç ise kontrol edin
yazdırırız bir ara

156
00:02:47,509 --> 00:02:47,519
yazdırırız bir ara
 

157
00:02:47,519 --> 00:02:49,910
yazdırırız bir ara
veririz aksi takdirde x miktar

158
00:02:49,910 --> 00:02:49,920
veririz aksi takdirde x miktar
 

159
00:02:49,920 --> 00:02:51,670
veririz aksi takdirde x miktar
dakika ve tekrar

160
00:02:51,670 --> 00:02:51,680
dakika ve tekrar
 

161
00:02:51,680 --> 00:02:53,110
dakika ve tekrar
çalıştırılacak dakika sayısını

162
00:02:53,110 --> 00:02:53,120
çalıştırılacak dakika sayısını
 

163
00:02:53,120 --> 00:02:55,350
çalıştırılacak dakika sayısını
hesaplamak için pahalı hesaplama

164
00:02:55,350 --> 00:02:55,360
hesaplamak için pahalı hesaplama
 

165
00:02:55,360 --> 00:02:56,150
hesaplamak için pahalı hesaplama
fonksiyonumuzu kullanırız

166
00:02:56,150 --> 00:02:56,160
fonksiyonumuzu kullanırız
 

167
00:02:56,160 --> 00:02:57,910
fonksiyonumuzu kullanırız
şimdi bu işe yarar ancak bazı

168
00:02:57,910 --> 00:02:57,920
şimdi bu işe yarar ancak bazı
 

169
00:02:57,920 --> 00:02:59,750
şimdi bu işe yarar ancak bazı
yeniden düzenlemeleri kullanabilir bir sorun şudur:

170
00:02:59,750 --> 00:02:59,760
yeniden düzenlemeleri kullanabilir bir sorun şudur:
 

171
00:02:59,760 --> 00:03:01,350
yeniden düzenlemeleri kullanabilir bir sorun şudur:
pahalı

172
00:03:01,350 --> 00:03:01,360
pahalı
 

173
00:03:01,360 --> 00:03:03,910
pahalı
fonksiyonumuzu birden fazla yerde çağırdığımızı, bu yüzden

174
00:03:03,910 --> 00:03:03,920
fonksiyonumuzu birden fazla yerde çağırdığımızı, bu yüzden
 

175
00:03:03,920 --> 00:03:05,350
fonksiyonumuzu birden fazla yerde çağırdığımızı, bu yüzden
fonksiyonun çağrılma şeklini değiştirirsek,

176
00:03:05,350 --> 00:03:05,360
fonksiyonun çağrılma şeklini değiştirirsek,
 

177
00:03:05,360 --> 00:03:07,910
fonksiyonun çağrılma şeklini değiştirirsek,
örneğin başka bir parametre eklersek,

178
00:03:07,910 --> 00:03:07,920
örneğin başka bir parametre eklersek,
 

179
00:03:07,920 --> 00:03:09,110
örneğin başka bir parametre eklersek,
o zaman tüm çağrı sitelerini değiştirmemiz gerekir,

180
00:03:09,110 --> 00:03:09,120
o zaman tüm çağrı sitelerini değiştirmemiz gerekir,
 

181
00:03:09,120 --> 00:03:11,589
o zaman tüm çağrı sitelerini değiştirmemiz gerekir,
ayrıca pahalı fonksiyonlarımızı çağırırız.

182
00:03:11,589 --> 00:03:12,710
ayrıca pahalı fonksiyonlarımızı çağırırız.
 

183
00:03:12,710 --> 00:03:15,589

 

184
00:03:15,589 --> 00:03:15,599

 

185
00:03:15,599 --> 00:03:16,710

örneğin bu if bloğunda

186
00:03:16,710 --> 00:03:18,790
örneğin bu if bloğunda
 

187
00:03:18,790 --> 00:03:18,800

 

188
00:03:18,800 --> 00:03:21,030

, gerçekten yalnızca bir kez çağırmamız gerektiğinde pahalı işlevimizi iki kez çağırırız

189
00:03:21,030 --> 00:03:21,040
, gerçekten yalnızca bir kez çağırmamız gerektiğinde pahalı işlevimizi iki kez çağırırız
 

190
00:03:21,040 --> 00:03:23,190
, gerçekten yalnızca bir kez çağırmamız gerektiğinde pahalı işlevimizi iki kez çağırırız
ve ardından bu iki print ifadesine de dönüş değerini iletiriz,

191
00:03:23,190 --> 00:03:24,789
ve ardından bu iki print ifadesine de dönüş değerini iletiriz,
 

192
00:03:24,789 --> 00:03:24,799

 

193
00:03:24,799 --> 00:03:26,630

şimdi bu normal işlevler için iyi olabilir,

194
00:03:26,630 --> 00:03:26,640
şimdi bu normal işlevler için iyi olabilir,
 

195
00:03:26,640 --> 00:03:28,470
şimdi bu normal işlevler için iyi olabilir,
ancak bunun

196
00:03:28,470 --> 00:03:28,480
ancak bunun
 

197
00:03:28,480 --> 00:03:30,229
ancak bunun
pahalı olduğunu unutmayın  Çalıştırması iki saniye süren bir fonksiyon, bu

198
00:03:30,229 --> 00:03:30,239
pahalı olduğunu unutmayın  Çalıştırması iki saniye süren bir fonksiyon, bu
 

199
00:03:30,239 --> 00:03:32,550
pahalı olduğunu unutmayın  Çalıştırması iki saniye süren bir fonksiyon, bu
yüzden

200
00:03:32,550 --> 00:03:32,560
yüzden
 

201
00:03:32,560 --> 00:03:34,470
yüzden
bu fonksiyonu çağırma

202
00:03:34,470 --> 00:03:34,480
bu fonksiyonu çağırma
 

203
00:03:34,480 --> 00:03:37,110
bu fonksiyonu çağırma
süremizi mümkün olduğunca sınırlamak istiyoruz, hadi

204
00:03:37,110 --> 00:03:37,120
süremizi mümkün olduğunca sınırlamak istiyoruz, hadi
 

205
00:03:37,120 --> 00:03:37,750
süremizi mümkün olduğunca sınırlamak istiyoruz, hadi

206
00:03:37,750 --> 00:03:37,760

 

207
00:03:37,760 --> 00:03:39,670

pahalı

208
00:03:39,670 --> 00:03:39,680
pahalı
 

209
00:03:39,680 --> 00:03:41,830
pahalı
fonksiyon çağrımızın sonucunu bir değişken içinde saklayarak bu iki sorunu çözelim,

210
00:03:41,830 --> 00:03:41,840
fonksiyon çağrımızın sonucunu bir değişken içinde saklayarak bu iki sorunu çözelim,
 

211
00:03:41,840 --> 00:03:43,270
fonksiyon çağrımızın sonucunu bir değişken içinde saklayarak bu iki sorunu çözelim,
böylece yeni bir değişken yaratacağız.

212
00:03:43,270 --> 00:03:43,280
böylece yeni bir değişken yaratacağız.
 

213
00:03:43,280 --> 00:03:44,869
böylece yeni bir değişken yaratacağız.
fonksiyonumuzun en üstünde

214
00:03:44,869 --> 00:03:44,879
fonksiyonumuzun en üstünde
 

215
00:03:44,879 --> 00:03:50,470
fonksiyonumuzun en üstünde
buna pahalı sonuç diyeceğiz

216
00:03:50,470 --> 00:03:50,480

 

217
00:03:50,480 --> 00:03:52,789

ve onu pahalı fonksiyon çağrımıza eşitleyeceğiz,

218
00:03:52,789 --> 00:03:56,710
ve onu pahalı fonksiyon çağrımıza eşitleyeceğiz,
 

219
00:03:56,710 --> 00:03:56,720

 

220
00:03:56,720 --> 00:03:58,550

sonra değişkenimizi tüm

221
00:03:58,550 --> 00:03:58,560
sonra değişkenimizi tüm
 

222
00:03:58,560 --> 00:04:07,509
sonra değişkenimizi tüm
print line ifadelerimizde kullanacağız

223
00:04:07,509 --> 00:04:07,519

 

224
00:04:07,519 --> 00:04:09,509

şimdi bu bizim çoğaltma

225
00:04:09,509 --> 00:04:09,519
şimdi bu bizim çoğaltma
 

226
00:04:09,519 --> 00:04:11,670
şimdi bu bizim çoğaltma
sorunumuzla ilgileniyor ama şimdi başka bir tane var  sorun

227
00:04:11,670 --> 00:04:11,680
sorunumuzla ilgileniyor ama şimdi başka bir tane var  sorun
 

228
00:04:11,680 --> 00:04:13,910
sorunumuzla ilgileniyor ama şimdi başka bir tane var  sorun
burada en üstte her durumda pahalı fonksiyonumuzu çağırıyoruz,

229
00:04:13,910 --> 00:04:15,429
burada en üstte her durumda pahalı fonksiyonumuzu çağırıyoruz,
 

230
00:04:15,429 --> 00:04:17,509

 

231
00:04:17,509 --> 00:04:17,519

 

232
00:04:17,519 --> 00:04:18,629

aşağıda

233
00:04:18,629 --> 00:04:18,639
aşağıda
 

234
00:04:18,639 --> 00:04:20,310
aşağıda
ne

235
00:04:20,310 --> 00:04:20,320
ne
 

236
00:04:20,320 --> 00:04:22,870
ne
yapılırsa yapılsın pahalı fonksiyonumuzu çağıracağız ama burada görebilirsiniz ki

237
00:04:22,870 --> 00:04:22,880
yapılırsa yapılsın pahalı fonksiyonumuzu çağıracağız ama burada görebilirsiniz ki
 

238
00:04:22,880 --> 00:04:24,390
yapılırsa yapılsın pahalı fonksiyonumuzu çağıracağız ama burada görebilirsiniz ki
eğer rastgele  sayı 3

239
00:04:24,390 --> 00:04:24,400
eğer rastgele  sayı 3
 

240
00:04:24,400 --> 00:04:26,070
eğer rastgele  sayı 3
, pahalı fonksiyonumuza ihtiyacımız yok

241
00:04:26,070 --> 00:04:26,080
, pahalı fonksiyonumuza ihtiyacımız yok
 

242
00:04:26,080 --> 00:04:27,430
, pahalı fonksiyonumuza ihtiyacımız yok
çünkü sadece

243
00:04:27,430 --> 00:04:27,440
çünkü sadece
 

244
00:04:27,440 --> 00:04:30,310
çünkü sadece
bu metni yazdırıyoruz, istediğimiz şey

245
00:04:30,310 --> 00:04:30,320
bu metni yazdırıyoruz, istediğimiz şey
 

246
00:04:30,320 --> 00:04:32,310
bu metni yazdırıyoruz, istediğimiz şey
kodumuzu tek bir yerde tanımlamak,

247
00:04:32,310 --> 00:04:32,320
kodumuzu tek bir yerde tanımlamak,
 

248
00:04:32,320 --> 00:04:35,270
kodumuzu tek bir yerde tanımlamak,
ancak sadece gerektiğinde yürütmek, bu yüzden

249
00:04:35,270 --> 00:04:35,280
ancak sadece gerektiğinde yürütmek, bu yüzden
 

250
00:04:35,280 --> 00:04:37,189
ancak sadece gerektiğinde yürütmek, bu yüzden
bunu

251
00:04:37,189 --> 00:04:37,199
bunu
 

252
00:04:37,199 --> 00:04:39,749
bunu
kapakları kullanarak yeniden düzenlemeyi deneyelim, en üste geri dönelim

253
00:04:39,749 --> 00:04:39,759
kapakları kullanarak yeniden düzenlemeyi deneyelim, en üste geri dönelim
 

254
00:04:39,759 --> 00:04:41,030
kapakları kullanarak yeniden düzenlemeyi deneyelim, en üste geri dönelim
programımızın

255
00:04:41,030 --> 00:04:41,040
programımızın
 

256
00:04:41,040 --> 00:04:43,270
programımızın
ve bu pahalı

257
00:04:43,270 --> 00:04:43,280
ve bu pahalı
 

258
00:04:43,280 --> 00:04:44,550
ve bu pahalı
sonuç

259
00:04:44,550 --> 00:04:44,560
sonuç
 

260
00:04:44,560 --> 00:04:48,150
sonuç
değişkenini tanımlamak yerine burada bir kapanış tanımlayacağız,

261
00:04:48,150 --> 00:04:48,160

 

262
00:04:48,160 --> 00:04:50,310

burada bizim kapanışımıza eşit olan pahalı kapanış adında bir değişkenimiz var

263
00:04:50,310 --> 00:04:50,320
burada bizim kapanışımıza eşit olan pahalı kapanış adında bir değişkenimiz var
 

264
00:04:50,320 --> 00:04:52,550
burada bizim kapanışımıza eşit olan pahalı kapanış adında bir değişkenimiz var
,

265
00:04:52,550 --> 00:04:52,560
,
 

266
00:04:52,560 --> 00:04:55,030
,
şimdi kapanışların

267
00:04:55,030 --> 00:04:55,040
şimdi kapanışların
 

268
00:04:55,040 --> 00:04:56,469
şimdi kapanışların
anonim fonksiyonlar olduğunu

269
00:04:56,469 --> 00:04:56,479
anonim fonksiyonlar olduğunu
 

270
00:04:56,479 --> 00:04:58,390
anonim fonksiyonlar olduğunu
ve bir kapanış ile

271
00:04:58,390 --> 00:04:58,400
ve bir kapanış ile
 

272
00:04:58,400 --> 00:05:00,230
ve bir kapanış ile
bir fonksiyon arasındaki farkı veya en azından  ana görsel

273
00:05:00,230 --> 00:05:00,240
bir fonksiyon arasındaki farkı veya en azından  ana görsel
 

274
00:05:00,240 --> 00:05:00,870
bir fonksiyon arasındaki farkı veya en azından  ana görsel
fark

275
00:05:00,870 --> 00:05:00,880
fark
 

276
00:05:00,880 --> 00:05:03,029
fark
, giriş parametrelerinin

277
00:05:03,029 --> 00:05:04,629
, giriş parametrelerinin
 

278
00:05:04,629 --> 00:05:04,639

 

279
00:05:04,639 --> 00:05:06,790

parantez içinde olması yerine bu dikey boruların içinde olmalarıdır, bu

280
00:05:06,790 --> 00:05:06,800
parantez içinde olması yerine bu dikey boruların içinde olmalarıdır, bu
 

281
00:05:06,800 --> 00:05:07,749
parantez içinde olması yerine bu dikey boruların içinde olmalarıdır, bu
yüzden

282
00:05:07,749 --> 00:05:07,759
yüzden
 

283
00:05:07,759 --> 00:05:10,230
yüzden
burada num ve ardından kapatmamızın gövdesini tutan parantezlerin izlediği bir giriş parametremiz var

284
00:05:10,230 --> 00:05:10,240
burada num ve ardından kapatmamızın gövdesini tutan parantezlerin izlediği bir giriş parametremiz var
 

285
00:05:10,240 --> 00:05:10,950
burada num ve ardından kapatmamızın gövdesini tutan parantezlerin izlediği bir giriş parametremiz var

286
00:05:10,950 --> 00:05:10,960

 

287
00:05:10,960 --> 00:05:13,590

ve

288
00:05:13,590 --> 00:05:13,600
ve
 

289
00:05:13,600 --> 00:05:14,790
ve
eğer kapatmamız sadece

290
00:05:14,790 --> 00:05:14,800
eğer kapatmamız sadece
 

291
00:05:14,800 --> 00:05:16,629
eğer kapatmamız sadece
bir satır olsaydı o zaman  parantezlere bile ihtiyacımız yok,

292
00:05:16,629 --> 00:05:16,639
bir satır olsaydı o zaman  parantezlere bile ihtiyacımız yok,
 

293
00:05:16,639 --> 00:05:19,189
bir satır olsaydı o zaman  parantezlere bile ihtiyacımız yok,
bu yüzden kapatma gövdemizin içinde

294
00:05:19,189 --> 00:05:19,199
bu yüzden kapatma gövdemizin içinde
 

295
00:05:19,199 --> 00:05:21,909
bu yüzden kapatma gövdemizin içinde
pahalı hesaplamamızı yapıyoruz ve

296
00:05:21,909 --> 00:05:21,919
pahalı hesaplamamızı yapıyoruz ve
 

297
00:05:21,919 --> 00:05:22,629
pahalı hesaplamamızı yapıyoruz ve
sonra

298
00:05:22,629 --> 00:05:22,639
sonra
 

299
00:05:22,639 --> 00:05:25,990
sonra
sonunda num'u döndürüyoruz, sonunda

300
00:05:25,990 --> 00:05:26,000
sonunda num'u döndürüyoruz, sonunda
 

301
00:05:26,000 --> 00:05:28,790
sonunda num'u döndürüyoruz, sonunda
bu semico'ya ihtiyacımız var  Burada let ifadesini bitirmek için lon

302
00:05:28,790 --> 00:05:29,830
bu semico'ya ihtiyacımız var  Burada let ifadesini bitirmek için lon
 

303
00:05:29,830 --> 00:05:29,840

 

304
00:05:29,840 --> 00:05:31,830

, pahalı kapatma değişkenimizin kapanışımızın

305
00:05:31,830 --> 00:05:31,840
, pahalı kapatma değişkenimizin kapanışımızın
 

306
00:05:31,840 --> 00:05:34,070
, pahalı kapatma değişkenimizin kapanışımızın
dönüş değerini

307
00:05:34,070 --> 00:05:34,080
dönüş değerini
 

308
00:05:34,080 --> 00:05:34,870
dönüş değerini

309
00:05:34,870 --> 00:05:34,880

 

310
00:05:34,880 --> 00:05:37,189

saklamadığını, bunun yerine kapatmanın kendisini sakladığını

311
00:05:37,189 --> 00:05:37,199
saklamadığını, bunun yerine kapatmanın kendisini sakladığını
 

312
00:05:37,199 --> 00:05:39,590
saklamadığını, bunun yerine kapatmanın kendisini sakladığını
not edin, ayrıca kapatmamızın gövdesinin burada tanımlanan pahalı fonksiyonumuzun

313
00:05:39,590 --> 00:05:39,600
not edin, ayrıca kapatmamızın gövdesinin burada tanımlanan pahalı fonksiyonumuzun
 

314
00:05:39,600 --> 00:05:41,990
not edin, ayrıca kapatmamızın gövdesinin burada tanımlanan pahalı fonksiyonumuzun
gövdesiyle aynı olduğunu unutmayın

315
00:05:41,990 --> 00:05:43,670
gövdesiyle aynı olduğunu unutmayın
 

316
00:05:43,670 --> 00:05:43,680

 

317
00:05:43,680 --> 00:05:46,230

closure'umuzun tanımlı

318
00:05:46,230 --> 00:05:46,240
closure'umuzun tanımlı
 

319
00:05:46,240 --> 00:05:47,670
closure'umuzun tanımlı
olduğunu, print line deyimlerimizin içinde çağırabiliriz, çünkü closure'umuzu

320
00:05:47,670 --> 00:05:54,550
olduğunu, print line deyimlerimizin içinde çağırabiliriz, çünkü closure'umuzu
 

321
00:05:54,550 --> 00:05:56,230

 

322
00:05:56,230 --> 00:05:56,240

 

323
00:05:56,240 --> 00:05:58,629

çağırmak için sözdiziminin bir fonksiyon çağırma sözdizimine benzediğini görebilirsiniz, kapanışımızı

324
00:05:58,629 --> 00:06:00,150
çağırmak için sözdiziminin bir fonksiyon çağırma sözdizimine benzediğini görebilirsiniz, kapanışımızı
 

325
00:06:00,150 --> 00:06:00,160

 

326
00:06:00,160 --> 00:06:02,469

tutan değişken

327
00:06:02,469 --> 00:06:03,430
tutan değişken
 

328
00:06:03,430 --> 00:06:03,440

 

329
00:06:03,440 --> 00:06:06,150

ismimizi ve ardından parantezler ile belirtiriz ve

330
00:06:06,150 --> 00:06:06,160
ismimizi ve ardından parantezler ile belirtiriz ve
 

331
00:06:06,160 --> 00:06:07,590
ismimizi ve ardından parantezler ile belirtiriz ve
sonra  giriş parametreleri

332
00:06:07,590 --> 00:06:07,600
sonra  giriş parametreleri
 

333
00:06:07,600 --> 00:06:09,590
sonra  giriş parametreleri
artık tek bir yerde mantığımız tanımlandı

334
00:06:09,590 --> 00:06:09,600
artık tek bir yerde mantığımız tanımlandı
 

335
00:06:09,600 --> 00:06:11,189
artık tek bir yerde mantığımız tanımlandı
ve sadece gerektiğinde pahalı operasyonumuzu çağırıyoruz

336
00:06:11,189 --> 00:06:11,199
ve sadece gerektiğinde pahalı operasyonumuzu çağırıyoruz
 

337
00:06:11,199 --> 00:06:12,150
ve sadece gerektiğinde pahalı operasyonumuzu çağırıyoruz

338
00:06:12,150 --> 00:06:12,160

 

339
00:06:12,160 --> 00:06:14,550

ama eski bir

340
00:06:14,550 --> 00:06:14,560
ama eski bir
 

341
00:06:14,560 --> 00:06:15,749
ama eski bir
problemle geri

342
00:06:15,749 --> 00:06:15,759
problemle geri
 

343
00:06:15,759 --> 00:06:17,670
problemle geri
döndük, bu if bloğunda

344
00:06:17,670 --> 00:06:17,680
döndük, bu if bloğunda
 

345
00:06:17,680 --> 00:06:19,110
döndük, bu if bloğunda
pahalı operasyonumuzu

346
00:06:19,110 --> 00:06:19,120
pahalı operasyonumuzu
 

347
00:06:19,120 --> 00:06:21,830
pahalı operasyonumuzu
iki kez çağırıyoruz ki bu iyi değil  şimdi bu if ifadesinin en üstünde pahalı kapatma çağrımızın

348
00:06:21,830 --> 00:06:21,840
iki kez çağırıyoruz ki bu iyi değil  şimdi bu if ifadesinin en üstünde pahalı kapatma çağrımızın
 

349
00:06:21,840 --> 00:06:23,590
iki kez çağırıyoruz ki bu iyi değil  şimdi bu if ifadesinin en üstünde pahalı kapatma çağrımızın
sonucunu saklayarak bu sorunu çözebiliriz,

350
00:06:23,590 --> 00:06:25,189
sonucunu saklayarak bu sorunu çözebiliriz,
 

351
00:06:25,189 --> 00:06:25,199

 

352
00:06:25,199 --> 00:06:27,350

ancak

353
00:06:27,350 --> 00:06:27,360
ancak
 

354
00:06:27,360 --> 00:06:28,710
ancak
bu sorunu çözmenin başka bir yolu var ki

355
00:06:28,710 --> 00:06:28,720
bu sorunu çözmenin başka bir yolu var ki
 

356
00:06:28,720 --> 00:06:29,270
bu sorunu çözmenin başka bir yolu var ki

357
00:06:29,270 --> 00:06:31,670

 

358
00:06:31,670 --> 00:06:31,680

 

359
00:06:31,680 --> 00:06:33,430

Bu sorunu çözmeden önce birazdan bahsedin,

360
00:06:33,430 --> 00:06:34,870
Bu sorunu çözmeden önce birazdan bahsedin,
 

361
00:06:34,870 --> 00:06:36,629

 

362
00:06:36,629 --> 00:06:36,639

 

363
00:06:36,639 --> 00:06:37,270


364
00:06:37,270 --> 00:06:37,280

 

365
00:06:37,280 --> 00:06:39,350

ne kapanışımızın girdi parametresinin tipini açıklamamız ne de

366
00:06:39,350 --> 00:06:40,710
ne kapanışımızın girdi parametresinin tipini açıklamamız ne de
 

367
00:06:40,710 --> 00:06:40,720

 

368
00:06:40,720 --> 00:06:42,950

normal fonksiyonlar için kapanışımızın dönüş değerini açıklamamız gerekmediğini fark etmişsinizdir,

369
00:06:42,950 --> 00:06:42,960
normal fonksiyonlar için kapanışımızın dönüş değerini açıklamamız gerekmediğini fark etmişsinizdir,
 

370
00:06:42,960 --> 00:06:44,790
normal fonksiyonlar için kapanışımızın dönüş değerini açıklamamız gerekmediğini fark etmişsinizdir,
tipi belirtmemiz gerekirdi

371
00:06:44,790 --> 00:06:44,800
tipi belirtmemiz gerekirdi
 

372
00:06:44,800 --> 00:06:45,909
tipi belirtmemiz gerekirdi
girdi parametrelerimiz

373
00:06:45,909 --> 00:06:45,919
girdi parametrelerimiz
 

374
00:06:45,919 --> 00:06:48,070
girdi parametrelerimiz
ve dönüş değerlerimizin türü ve

375
00:06:48,070 --> 00:06:48,080
ve dönüş değerlerimizin türü ve
 

376
00:06:48,080 --> 00:06:49,990
ve dönüş değerlerimizin türü ve
bunun nedeni, işlevlerin kullanıcılara açık olan açık bir arabirimin parçası olmalarıdır,

377
00:06:49,990 --> 00:06:51,350
bunun nedeni, işlevlerin kullanıcılara açık olan açık bir arabirimin parçası olmalarıdır,
 

378
00:06:51,350 --> 00:06:51,360

 

379
00:06:51,360 --> 00:06:53,749

bu nedenle

380
00:06:53,749 --> 00:06:53,759
bu nedenle
 

381
00:06:53,759 --> 00:06:55,110
bu nedenle
iletilen

382
00:06:55,110 --> 00:06:55,120
iletilen
 

383
00:06:55,120 --> 00:06:57,830
iletilen
ve döndürülen türler üzerinde anlaşmaya varmak önemlidir

384
00:06:57,830 --> 00:06:57,840
ve döndürülen türler üzerinde anlaşmaya varmak önemlidir
 

385
00:06:57,840 --> 00:06:59,510
ve döndürülen türler üzerinde anlaşmaya varmak önemlidir
, diğer yandan kapanışlar genellikle kısadır ve

386
00:06:59,510 --> 00:06:59,520
, diğer yandan kapanışlar genellikle kısadır ve
 

387
00:06:59,520 --> 00:07:02,150
, diğer yandan kapanışlar genellikle kısadır ve
yalnızca dar bir alanda alakalıdır.  bağlam, böylece

388
00:07:02,150 --> 00:07:02,160
yalnızca dar bir alanda alakalıdır.  bağlam, böylece
 

389
00:07:02,160 --> 00:07:02,550
yalnızca dar bir alanda alakalıdır.  bağlam, böylece

390
00:07:02,550 --> 00:07:02,560

 

391
00:07:02,560 --> 00:07:04,870

derleyici giriş

392
00:07:04,870 --> 00:07:04,880
derleyici giriş
 

393
00:07:04,880 --> 00:07:05,990
derleyici giriş
parametresi türlerini

394
00:07:05,990 --> 00:07:06,000
parametresi türlerini
 

395
00:07:06,000 --> 00:07:08,230
parametresi türlerini
ve dönüş türlerini belirleyebilir bu,

396
00:07:08,230 --> 00:07:08,240
ve dönüş türlerini belirleyebilir bu,
 

397
00:07:08,240 --> 00:07:10,150
ve dönüş türlerini belirleyebilir bu,
derleyicinin çoğu değişkenin türlerini nasıl belirleyebildiğine benzerdir,

398
00:07:10,150 --> 00:07:12,070
derleyicinin çoğu değişkenin türlerini nasıl belirleyebildiğine benzerdir,
 

399
00:07:12,070 --> 00:07:13,749

 

400
00:07:13,749 --> 00:07:13,759

 

401
00:07:13,759 --> 00:07:17,430

eğer istersek türleri açık hale getirebileceğimizi unutmayın, bu nedenle

402
00:07:17,430 --> 00:07:17,440
eğer istersek türleri açık hale getirebileceğimizi unutmayın, bu nedenle
 

403
00:07:17,440 --> 00:07:19,270
eğer istersek türleri açık hale getirebileceğimizi unutmayın, bu nedenle
türleri açık hale getirir

404
00:07:19,270 --> 00:07:19,280
türleri açık hale getirir
 

405
00:07:19,280 --> 00:07:21,350
türleri açık hale getirir
daha ayrıntılı olma pahasına,

406
00:07:21,350 --> 00:07:21,360
daha ayrıntılı olma pahasına,
 

407
00:07:21,360 --> 00:07:23,189
daha ayrıntılı olma pahasına,
kapatma tanımlarının her bir girdi parametresi için

408
00:07:23,189 --> 00:07:23,199
kapatma tanımlarının her bir girdi parametresi için
 

409
00:07:23,199 --> 00:07:25,350
kapatma tanımlarının her bir girdi parametresi için
yalnızca bir somut türe sahip olabileceğini unutmayın,

410
00:07:25,350 --> 00:07:25,360
yalnızca bir somut türe sahip olabileceğini unutmayın,
 

411
00:07:25,360 --> 00:07:27,749
yalnızca bir somut türe sahip olabileceğini unutmayın,
örneğin

412
00:07:27,749 --> 00:07:27,759
örneğin
 

413
00:07:27,759 --> 00:07:29,110
örneğin
burada biz  x'i alan ve sonra x döndüren

414
00:07:29,110 --> 00:07:29,120
burada biz  x'i alan ve sonra x döndüren
 

415
00:07:29,120 --> 00:07:31,189
burada biz  x'i alan ve sonra x döndüren
bir kapatmaya eşit olan örnek kapatma adında bir değişkene sahip olmak,

416
00:07:31,189 --> 00:07:33,270
bir kapatmaya eşit olan örnek kapatma adında bir değişkene sahip olmak,
 

417
00:07:33,270 --> 00:07:33,280

 

418
00:07:33,280 --> 00:07:36,150

çünkü

419
00:07:36,150 --> 00:07:36,160
çünkü
 

420
00:07:36,160 --> 00:07:37,589
çünkü
kapatma

421
00:07:37,589 --> 00:07:37,599
kapatma
 

422
00:07:37,599 --> 00:07:40,309
kapatma
burada 26. satırda bir dize ile kullanıldığından

423
00:07:40,309 --> 00:07:40,319
burada 26. satırda bir dize ile kullanıldığından
 

424
00:07:40,319 --> 00:07:41,670
burada 26. satırda bir dize ile kullanıldığından
derleyici

425
00:07:41,670 --> 00:07:41,680
derleyici
 

426
00:07:41,680 --> 00:07:43,830
derleyici
, girdi parametre türünün bir

427
00:07:43,830 --> 00:07:43,840
, girdi parametre türünün bir
 

428
00:07:43,840 --> 00:07:46,230
, girdi parametre türünün bir
dize olduğunu ancak daha sonra satırın hemen altında olduğunu çıkarır.

429
00:07:46,230 --> 00:07:46,240
dize olduğunu ancak daha sonra satırın hemen altında olduğunu çıkarır.
 

430
00:07:46,240 --> 00:07:47,270
dize olduğunu ancak daha sonra satırın hemen altında olduğunu çıkarır.

431
00:07:47,270 --> 00:07:47,280

 

432
00:07:47,280 --> 00:07:50,309

27 örnek kapatma

433
00:07:50,309 --> 00:07:50,319
27 örnek kapatma
 

434
00:07:50,319 --> 00:07:53,110
27 örnek kapatma
değişkenimizi bir tamsayı ile çağırıyoruz, şimdi derleyici

435
00:07:53,110 --> 00:07:53,120
değişkenimizi bir tamsayı ile çağırıyoruz, şimdi derleyici
 

436
00:07:53,120 --> 00:07:53,830
değişkenimizi bir tamsayı ile çağırıyoruz, şimdi derleyici
şikayet

437
00:07:53,830 --> 00:07:53,840
şikayet
 

438
00:07:53,840 --> 00:07:55,350
şikayet
edecek ve ok,

439
00:07:55,350 --> 00:07:55,360
edecek ve ok,
 

440
00:07:55,360 --> 00:07:57,510
edecek ve ok,
uyumsuz türlerimiz olduğunu söyleyecek, bir

441
00:07:57,510 --> 00:07:57,520
uyumsuz türlerimiz olduğunu söyleyecek, bir
 

442
00:07:57,520 --> 00:07:58,550
uyumsuz türlerimiz olduğunu söyleyecek, bir
dize bekliyoruz ama

443
00:07:58,550 --> 00:07:58,560
dize bekliyoruz ama
 

444
00:07:58,560 --> 00:08:00,950
dize bekliyoruz ama
bir tamsayı alıyoruz, bu nedenle derleyicinin çalışma

445
00:08:00,950 --> 00:08:00,960
bir tamsayı alıyoruz, bu nedenle derleyicinin çalışma
 

446
00:08:00,960 --> 00:08:02,869
bir tamsayı alıyoruz, bu nedenle derleyicinin çalışma
şekli, ilk türün bize geçmesidir.

447
00:08:02,869 --> 00:08:02,879
şekli, ilk türün bize geçmesidir.
 

448
00:08:02,879 --> 00:08:03,670
şekli, ilk türün bize geçmesidir.
closure

449
00:08:03,670 --> 00:08:03,680
closure
 

450
00:08:03,680 --> 00:08:06,309
closure
giriş parametrelerimizin somut türü olacak

451
00:08:06,309 --> 00:08:06,319
giriş parametrelerimizin somut türü olacak
 

452
00:08:06,319 --> 00:08:07,189
giriş parametrelerimizin somut türü olacak

453
00:08:07,189 --> 00:08:07,199

 

454
00:08:07,199 --> 00:08:08,790

şimdi bu if bloğunda

455
00:08:08,790 --> 00:08:08,800
şimdi bu if bloğunda
 

456
00:08:08,800 --> 00:08:11,029
şimdi bu if bloğunda
pahalı closure'umuzu iki kez çağırma sorununa geri dönelim,

457
00:08:11,029 --> 00:08:13,830
pahalı closure'umuzu iki kez çağırma sorununa geri dönelim,
 

458
00:08:13,830 --> 00:08:13,840

 

459
00:08:13,840 --> 00:08:15,830

bu fonksiyonu if bloğumuzun tepesinde bir değişken oluşturarak

460
00:08:15,830 --> 00:08:16,710
bu fonksiyonu if bloğumuzun tepesinde bir değişken oluşturarak
 

461
00:08:16,710 --> 00:08:16,720

 

462
00:08:16,720 --> 00:08:18,950

ve sadece sonucunu depolayarak çözebiliriz.

463
00:08:18,950 --> 00:08:18,960
ve sadece sonucunu depolayarak çözebiliriz.
 

464
00:08:18,960 --> 00:08:20,309
ve sadece sonucunu depolayarak çözebiliriz.
pahalı kapatmamız

465
00:08:20,309 --> 00:08:20,319
pahalı kapatmamız
 

466
00:08:20,319 --> 00:08:22,309
pahalı kapatmamız
ve ardından bu sonucu kullanarak

467
00:08:22,309 --> 00:08:22,319
ve ardından bu sonucu kullanarak
 

468
00:08:22,319 --> 00:08:23,990
ve ardından bu sonucu kullanarak
bu baskı satırı ifadelerinin her ikisinde de

469
00:08:23,990 --> 00:08:25,830
bu baskı satırı ifadelerinin her ikisinde de
 

470
00:08:25,830 --> 00:08:25,840

 

471
00:08:25,840 --> 00:08:28,070

kullanacağız, ancak başka bir şey yapacağız, yapacağımız şey,

472
00:08:28,070 --> 00:08:28,080
kullanacağız, ancak başka bir şey yapacağız, yapacağımız şey,
 

473
00:08:28,080 --> 00:08:28,869
kullanacağız, ancak başka bir şey yapacağız, yapacağımız şey,

474
00:08:28,869 --> 00:08:28,879

 

475
00:08:28,879 --> 00:08:31,670

bir str oluşturarak notlandırma modelini kullanmaktır.  Kapatmamızı

476
00:08:31,670 --> 00:08:31,680
bir str oluşturarak notlandırma modelini kullanmaktır.  Kapatmamızı
 

477
00:08:31,680 --> 00:08:32,630
bir str oluşturarak notlandırma modelini kullanmaktır.  Kapatmamızı

478
00:08:32,630 --> 00:08:32,640

 

479
00:08:32,640 --> 00:08:35,430

ve kapatmamızın sonucunu burada tutacak olan

480
00:08:35,430 --> 00:08:37,110
ve kapatmamızın sonucunu burada tutacak olan
 

481
00:08:37,110 --> 00:08:40,070

 

482
00:08:40,070 --> 00:08:40,080

 

483
00:08:40,080 --> 00:08:40,870


484
00:08:40,870 --> 00:08:40,880

 

485
00:08:40,880 --> 00:08:43,670

uct, yapı numaralandırmalarını ve hatta kapatmaları kullanan fonksiyon parametrelerini tanımlamak için şimdi oluşturma çalışma fonksiyonumuzun hemen üzerinde önbellek adında bir yapı oluşturdum,

486
00:08:43,670 --> 00:08:45,269
uct, yapı numaralandırmalarını ve hatta kapatmaları kullanan fonksiyon parametrelerini tanımlamak için şimdi oluşturma çalışma fonksiyonumuzun hemen üzerinde önbellek adında bir yapı oluşturdum,
 

487
00:08:45,269 --> 00:08:47,910

 

488
00:08:47,910 --> 00:08:47,920

 

489
00:08:47,920 --> 00:08:48,870


490
00:08:48,870 --> 00:08:48,880

 

491
00:08:48,880 --> 00:08:51,590

burada önbelleğimizde jenerik ve özellik sınırlarını kullanmamız gerekiyor  instruct

492
00:08:51,590 --> 00:08:51,600
burada önbelleğimizde jenerik ve özellik sınırlarını kullanmamız gerekiyor  instruct
 

493
00:08:51,600 --> 00:08:52,230
burada önbelleğimizde jenerik ve özellik sınırlarını kullanmamız gerekiyor  instruct
,

494
00:08:52,230 --> 00:08:52,240
,
 

495
00:08:52,240 --> 00:08:55,430
,
t adında bir jenerik kullanıyor ve aşağıda

496
00:08:55,430 --> 00:08:55,440
t adında bir jenerik kullanıyor ve aşağıda
 

497
00:08:55,440 --> 00:08:56,949
t adında bir jenerik kullanıyor ve aşağıda
, jenerik için bağlı bir özellik tanımlıyoruz

498
00:08:56,949 --> 00:08:56,959
, jenerik için bağlı bir özellik tanımlıyoruz
 

499
00:08:56,959 --> 00:08:59,590
, jenerik için bağlı bir özellik tanımlıyoruz
ve kullandığımız özellik, fn özelliğinin

500
00:08:59,590 --> 00:08:59,600
ve kullandığımız özellik, fn özelliğinin
 

501
00:08:59,600 --> 00:09:00,150
ve kullandığımız özellik, fn özelliğinin

502
00:09:00,150 --> 00:09:00,160

 

503
00:09:00,160 --> 00:09:02,070

ne olduğuna girmeden, şimdi fonksiyon için kısadır

504
00:09:02,070 --> 00:09:02,080
ne olduğuna girmeden, şimdi fonksiyon için kısadır
 

505
00:09:02,080 --> 00:09:04,310
ne olduğuna girmeden, şimdi fonksiyon için kısadır
, sadece

506
00:09:04,310 --> 00:09:04,320
, sadece
 

507
00:09:04,320 --> 00:09:05,750
, sadece
standart kitaplık tarafından sağlandığını

508
00:09:05,750 --> 00:09:05,760
standart kitaplık tarafından sağlandığını
 

509
00:09:05,760 --> 00:09:07,829
standart kitaplık tarafından sağlandığını
ve tüm kapakların uygulandığını biliyoruz.

510
00:09:07,829 --> 00:09:07,839
ve tüm kapakların uygulandığını biliyoruz.
 

511
00:09:07,839 --> 00:09:09,670
ve tüm kapakların uygulandığını biliyoruz.
üç fn özelliğinden

512
00:09:09,670 --> 00:09:09,680
üç fn özelliğinden
 

513
00:09:09,680 --> 00:09:12,389
üç fn özelliğinden
biri, biri fn, diğeri fn

514
00:09:12,389 --> 00:09:12,399
biri, biri fn, diğeri fn
 

515
00:09:12,399 --> 00:09:13,350
biri, biri fn, diğeri fn
mute

516
00:09:13,350 --> 00:09:13,360
mute
 

517
00:09:13,360 --> 00:09:17,269
mute
ve sonuncusu fn bir kez

518
00:09:17,269 --> 00:09:19,110
ve sonuncusu fn bir kez
 

519
00:09:19,110 --> 00:09:19,120

 

520
00:09:19,120 --> 00:09:21,190

bu üç özellik arasındaki farklara

521
00:09:21,190 --> 00:09:21,200
bu üç özellik arasındaki farklara
 

522
00:09:21,200 --> 00:09:23,190
bu üç özellik arasındaki farklara
birazdan gireceğiz, fn tepsisine türler ekledik

523
00:09:23,190 --> 00:09:23,200
birazdan gireceğiz, fn tepsisine türler ekledik
 

524
00:09:23,200 --> 00:09:25,030
birazdan gireceğiz, fn tepsisine türler ekledik
.

525
00:09:25,030 --> 00:09:25,040
.
 

526
00:09:25,040 --> 00:09:27,509
.
Bir

527
00:09:27,509 --> 00:09:27,519
Bir
 

528
00:09:27,519 --> 00:09:29,430
Bir
işaretsiz 32-bit tamsayı olacak olan kapanışımızın giriş parametreleri

529
00:09:29,430 --> 00:09:29,440
işaretsiz 32-bit tamsayı olacak olan kapanışımızın giriş parametreleri
 

530
00:09:29,440 --> 00:09:31,670
işaretsiz 32-bit tamsayı olacak olan kapanışımızın giriş parametreleri
ve ayrıca

531
00:09:31,670 --> 00:09:32,630
ve ayrıca
 

532
00:09:32,630 --> 00:09:32,640

 

533
00:09:32,640 --> 00:09:35,269

yine işaretsiz bir 32-bit tamsayı olacak olan çıkış parametreleri, daha sonra

534
00:09:35,269 --> 00:09:35,279
yine işaretsiz bir 32-bit tamsayı olacak olan çıkış parametreleri, daha sonra
 

535
00:09:35,279 --> 00:09:37,190
yine işaretsiz bir 32-bit tamsayı olacak olan çıkış parametreleri, daha sonra
yapımızın gövdesinde

536
00:09:37,190 --> 00:09:37,200
yapımızın gövdesinde
 

537
00:09:37,200 --> 00:09:39,509
yapımızın gövdesinde
t var.  iki alan ilki

538
00:09:39,509 --> 00:09:39,519
t var.  iki alan ilki
 

539
00:09:39,519 --> 00:09:41,350
t var.  iki alan ilki
genel türümüzü depolayacak

540
00:09:41,350 --> 00:09:41,360
genel türümüzü depolayacak
 

541
00:09:41,360 --> 00:09:44,070
genel türümüzü depolayacak
hesaplamadır, böylece hesaplama buraya bağlı bu tepsiyi karşılayan herhangi bir kapatma olabilir

542
00:09:44,070 --> 00:09:44,080
hesaplamadır, böylece hesaplama buraya bağlı bu tepsiyi karşılayan herhangi bir kapatma olabilir
 

543
00:09:44,080 --> 00:09:44,949
hesaplamadır, böylece hesaplama buraya bağlı bu tepsiyi karşılayan herhangi bir kapatma olabilir
,

544
00:09:44,949 --> 00:09:44,959
,
 

545
00:09:44,959 --> 00:09:48,310
,
o zaman

546
00:09:48,310 --> 00:09:48,320
o zaman
 

547
00:09:48,320 --> 00:09:50,710
o zaman
isteğe bağlı bir 32 bit tamsayı değeri olacak bir değere sahip oluruz

548
00:09:50,710 --> 00:09:50,720
isteğe bağlı bir 32 bit tamsayı değeri olacak bir değere sahip oluruz
 

549
00:09:50,720 --> 00:09:51,670
isteğe bağlı bir 32 bit tamsayı değeri olacak bir değere sahip oluruz

550
00:09:51,670 --> 00:09:54,230

 

551
00:09:54,230 --> 00:09:54,240

 

552
00:09:54,240 --> 00:09:55,110

çünkü önbelleğimiz

553
00:09:55,110 --> 00:09:55,120
çünkü önbelleğimiz
 

554
00:09:55,120 --> 00:09:57,190
çünkü önbelleğimiz
başlatıldığında isteğe bağlıdır  hiçbiri olacak ve

555
00:09:57,190 --> 00:09:57,200
başlatıldığında isteğe bağlıdır  hiçbiri olacak ve
 

556
00:09:57,200 --> 00:09:59,110
başlatıldığında isteğe bağlıdır  hiçbiri olacak ve
sonra hesaplamamızı çağırdığımızda

557
00:09:59,110 --> 00:09:59,120
sonra hesaplamamızı çağırdığımızda
 

558
00:09:59,120 --> 00:10:01,590
sonra hesaplamamızı çağırdığımızda
, dönüş değerini değer alanımızın içinde saklayacağız,

559
00:10:01,590 --> 00:10:02,870
, dönüş değerini değer alanımızın içinde saklayacağız,
 

560
00:10:02,870 --> 00:10:02,880

 

561
00:10:02,880 --> 00:10:05,190

normal fonksiyonların

562
00:10:05,190 --> 00:10:05,200
normal fonksiyonların
 

563
00:10:05,200 --> 00:10:06,710
normal fonksiyonların
bu üç

564
00:10:06,710 --> 00:10:06,720
bu üç
 

565
00:10:06,720 --> 00:10:09,829
bu üç
fn özelliğini de uyguladığına dikkat edin, böylece hesaplama alanımızda da normal bir fonksiyon saklayabiliriz.

566
00:10:09,829 --> 00:10:09,839
fn özelliğini de uyguladığına dikkat edin, böylece hesaplama alanımızda da normal bir fonksiyon saklayabiliriz.
 

567
00:10:09,839 --> 00:10:10,310
fn özelliğini de uyguladığına dikkat edin, böylece hesaplama alanımızda da normal bir fonksiyon saklayabiliriz.

568
00:10:10,310 --> 00:10:13,190

 

569
00:10:13,190 --> 00:10:15,190

 

570
00:10:15,190 --> 00:10:15,200

 

571
00:10:15,200 --> 00:10:16,949

Bir önbellek veya yapı için uygulama bloğuna yapıştıracağız

572
00:10:16,949 --> 00:10:16,959
Bir önbellek veya yapı için uygulama bloğuna yapıştıracağız
 

573
00:10:16,959 --> 00:10:21,110
Bir önbellek veya yapı için uygulama bloğuna yapıştıracağız
ve bunun hakkında konuşacağız

574
00:10:21,110 --> 00:10:21,120

 

575
00:10:21,120 --> 00:10:23,269

tamam hadi bunun üzerinden geçelim önbellek veya

576
00:10:23,269 --> 00:10:24,389
tamam hadi bunun üzerinden geçelim önbellek veya
 

577
00:10:24,389 --> 00:10:24,399

 

578
00:10:24,399 --> 00:10:27,110

yapımızla aynı genel

579
00:10:27,110 --> 00:10:27,120
yapımızla aynı genel
 

580
00:10:27,120 --> 00:10:28,230
yapımızla aynı genel
ve özelliğe sahip

581
00:10:28,230 --> 00:10:28,240
ve özelliğe sahip
 

582
00:10:28,240 --> 00:10:30,630
ve özelliğe sahip
önbellek için uygulama bloğumuz var ve sonra

583
00:10:30,630 --> 00:10:31,590
önbellek için uygulama bloğumuz var ve sonra
 

584
00:10:31,590 --> 00:10:31,600

 

585
00:10:31,600 --> 00:10:34,150

içerideki ilk işlev  new new olarak adlandırılan, bizim kapanışımız

586
00:10:34,150 --> 00:10:35,750
içerideki ilk işlev  new new olarak adlandırılan, bizim kapanışımız
 

587
00:10:35,750 --> 00:10:35,760

 

588
00:10:35,760 --> 00:10:37,829

türündeki bir hesaplamada aldığı

589
00:10:37,829 --> 00:10:37,839
türündeki bir hesaplamada aldığı
 

590
00:10:37,839 --> 00:10:39,910
türündeki bir hesaplamada aldığı
ve ardından hesaplamada geçen ve değeri yok olarak ayarlayan yeni bir önbellek oluşturan bir

591
00:10:39,910 --> 00:10:39,920
ve ardından hesaplamada geçen ve değeri yok olarak ayarlayan yeni bir önbellek oluşturan bir
 

592
00:10:39,920 --> 00:10:41,190
ve ardından hesaplamada geçen ve değeri yok olarak ayarlayan yeni bir önbellek oluşturan bir
yapıcı işlevdir.

593
00:10:41,190 --> 00:10:44,069
yapıcı işlevdir.
 

594
00:10:44,069 --> 00:10:44,079

 

595
00:10:44,079 --> 00:10:44,790


596
00:10:44,790 --> 00:10:44,800

 

597
00:10:44,800 --> 00:10:47,910

o zaman değer yöntemimiz var ve bu bir

598
00:10:47,910 --> 00:10:47,920
o zaman değer yöntemimiz var ve bu bir
 

599
00:10:47,920 --> 00:10:49,670
o zaman değer yöntemimiz var ve bu bir
yöntem çünkü ilk

600
00:10:49,670 --> 00:10:49,680
yöntem çünkü ilk
 

601
00:10:49,680 --> 00:10:52,389
yöntem çünkü ilk
parametre self'e bir referans ve aslında

602
00:10:52,389 --> 00:10:52,399
parametre self'e bir referans ve aslında
 

603
00:10:52,399 --> 00:10:54,470
parametre self'e bir referans ve aslında
self'e değişken bir referansımız var, bir

604
00:10:54,470 --> 00:10:54,480
self'e değişken bir referansımız var, bir
 

605
00:10:54,480 --> 00:10:57,590
self'e değişken bir referansımız var, bir
sonraki parametre arg, bu

606
00:10:57,590 --> 00:10:57,600
sonraki parametre arg, bu
 

607
00:10:57,600 --> 00:11:00,150
sonraki parametre arg, bu
da kapanışımıza ileteceğimiz argüman

608
00:11:00,150 --> 00:11:00,160
da kapanışımıza ileteceğimiz argüman
 

609
00:11:00,160 --> 00:11:02,550
da kapanışımıza ileteceğimiz argüman
ve imzasız bir 32  -bit tamsayı

610
00:11:02,550 --> 00:11:02,560
ve imzasız bir 32  -bit tamsayı
 

611
00:11:02,560 --> 00:11:05,110
ve imzasız bir 32  -bit tamsayı
dönüş türü de değer yönteminin içinde işaretsiz bir 32-bit

612
00:11:05,110 --> 00:11:05,120
dönüş türü de değer yönteminin içinde işaretsiz bir 32-bit
 

613
00:11:05,120 --> 00:11:05,829
dönüş türü de değer yönteminin içinde işaretsiz bir 32-bit
tamsayıdır

614
00:11:05,829 --> 00:11:08,069
tamsayıdır
 

615
00:11:08,069 --> 00:11:09,590

 

616
00:11:09,590 --> 00:11:09,600

 

617
00:11:09,600 --> 00:11:12,710

, self nokta değerinde bir eşleşme ifadesi yapacağız, bu nedenle

618
00:11:12,710 --> 00:11:12,720
, self nokta değerinde bir eşleşme ifadesi yapacağız, bu nedenle
 

619
00:11:12,720 --> 00:11:13,829
, self nokta değerinde bir eşleşme ifadesi yapacağız, bu nedenle
self nokta

620
00:11:13,829 --> 00:11:13,839
self nokta
 

621
00:11:13,839 --> 00:11:16,550
self nokta
türünü kontrol ediyoruz ve self.value'nin isteğe bağlı bir tür olduğunu hatırlayalım

622
00:11:16,550 --> 00:11:17,509
türünü kontrol ediyoruz ve self.value'nin isteğe bağlı bir tür olduğunu hatırlayalım
 

623
00:11:17,509 --> 00:11:17,519

 

624
00:11:17,519 --> 00:11:19,829

ve  önbelleğimizi ilk oluşturduğumuzda

625
00:11:19,829 --> 00:11:19,839
ve  önbelleğimizi ilk oluşturduğumuzda
 

626
00:11:19,839 --> 00:11:21,269
ve  önbelleğimizi ilk oluşturduğumuzda
hiçbiri olarak ayarlanacak,

627
00:11:21,269 --> 00:11:21,279
hiçbiri olarak ayarlanacak,
 

628
00:11:21,279 --> 00:11:24,310
hiçbiri olarak ayarlanacak,
bu nedenle bu yok

629
00:11:24,310 --> 00:11:24,320
bu nedenle bu yok
 

630
00:11:24,320 --> 00:11:26,389
bu nedenle bu yok
dalını yok kolunda çalıştıracağız

631
00:11:26,389 --> 00:11:26,399
dalını yok kolunda çalıştıracağız
 

632
00:11:26,399 --> 00:11:27,430
dalını yok kolunda çalıştıracağız
v adında bir değişken yaratıyoruz

633
00:11:27,430 --> 00:11:27,440
v adında bir değişken yaratıyoruz
 

634
00:11:27,440 --> 00:11:29,590
v adında bir değişken yaratıyoruz
ve onu

635
00:11:29,590 --> 00:11:29,600
ve onu
 

636
00:11:29,600 --> 00:11:31,350
ve onu
hesaplama

637
00:11:31,350 --> 00:11:31,360
hesaplama
 

638
00:11:31,360 --> 00:11:35,030
hesaplama
kapatmamızı çağırmanın ve arg değişkenini geçmenin sonucuna eşit olarak ayarlıyoruz

639
00:11:35,030 --> 00:11:35,040
kapatmamızı çağırmanın ve arg değişkenini geçmenin sonucuna eşit olarak ayarlıyoruz
 

640
00:11:35,040 --> 00:11:37,110
kapatmamızı çağırmanın ve arg değişkenini geçmenin sonucuna eşit olarak ayarlıyoruz
daha

641
00:11:37,110 --> 00:11:37,120
daha
 

642
00:11:37,120 --> 00:11:38,710
daha
sonra mevcut önbelleğin veya örneğin değer alanını değiştiriyoruz

643
00:11:38,710 --> 00:11:38,720
sonra mevcut önbelleğin veya örneğin değer alanını değiştiriyoruz
 

644
00:11:38,720 --> 00:11:42,069
sonra mevcut önbelleğin veya örneğin değer alanını değiştiriyoruz
ve onu v'de bazı geçişlere ayarlıyoruz

645
00:11:42,069 --> 00:11:42,079
ve onu v'de bazı geçişlere ayarlıyoruz
 

646
00:11:42,079 --> 00:11:44,069
ve onu v'de bazı geçişlere ayarlıyoruz
, önbelleğe almanın gerçekleştiği yer burası, hesaplamamızın

647
00:11:44,069 --> 00:11:44,079
, önbelleğe almanın gerçekleştiği yer burası, hesaplamamızın
 

648
00:11:44,079 --> 00:11:45,829
, önbelleğe almanın gerçekleştiği yer burası, hesaplamamızın
dönüş değerini

649
00:11:45,829 --> 00:11:45,839
dönüş değerini
 

650
00:11:45,839 --> 00:11:46,949
dönüş değerini

651
00:11:46,949 --> 00:11:46,959

 

652
00:11:46,959 --> 00:11:49,110

değer alanı içinde önbelleğe alıyoruz ve sonra

653
00:11:49,110 --> 00:11:49,120
değer alanı içinde önbelleğe alıyoruz ve sonra
 

654
00:11:49,120 --> 00:11:50,710
değer alanı içinde önbelleğe alıyoruz ve sonra
sadece

655
00:11:50,710 --> 00:11:50,720
sadece
 

656
00:11:50,720 --> 00:11:53,190
sadece
v'yi döndürüyoruz next let  ' paramızı veya yapımızı

657
00:11:53,190 --> 00:11:53,200
v'yi döndürüyoruz next let  ' paramızı veya yapımızı
 

658
00:11:53,200 --> 00:11:55,350
v'yi döndürüyoruz next let  ' paramızı veya yapımızı
oluştur egzersiz fonksiyonu içinde kullanın,

659
00:11:55,350 --> 00:11:55,360
oluştur egzersiz fonksiyonu içinde kullanın,
 

660
00:11:55,360 --> 00:11:57,430
oluştur egzersiz fonksiyonu içinde kullanın,
ancak bunu yapmadan önce ilk önce

661
00:11:57,430 --> 00:11:57,440
ancak bunu yapmadan önce ilk önce
 

662
00:11:57,440 --> 00:12:03,509
ancak bunu yapmadan önce ilk önce
programımızı çalıştıralım

663
00:12:03,509 --> 00:12:03,519

 

664
00:12:03,519 --> 00:12:05,590

, gördüğünüz gibi pahalı kapatmamız bir

665
00:12:05,590 --> 00:12:06,710
, gördüğünüz gibi pahalı kapatmamız bir
 

666
00:12:06,710 --> 00:12:06,720

 

667
00:12:06,720 --> 00:12:08,949

kez şınav sayısını hesaplamak için iki kez

668
00:12:08,949 --> 00:12:08,959
kez şınav sayısını hesaplamak için iki kez
 

669
00:12:08,959 --> 00:12:10,550
kez şınav sayısını hesaplamak için iki kez
ve ikinci kez sayısını hesaplamak

670
00:12:10,550 --> 00:12:10,560
ve ikinci kez sayısını hesaplamak
 

671
00:12:10,560 --> 00:12:12,870
ve ikinci kez sayısını hesaplamak
için çağrıldı.  mekikler

672
00:12:12,870 --> 00:12:12,880
için çağrıldı.  mekikler
 

673
00:12:12,880 --> 00:12:14,710
için çağrıldı.  mekikler
, kapatma

674
00:12:14,710 --> 00:12:14,720
, kapatma
 

675
00:12:14,720 --> 00:12:15,430
, kapatma

676
00:12:15,430 --> 00:12:15,440

 

677
00:12:15,440 --> 00:12:27,990

tanımımızı buraya, kasa yapımızın içine sararak bunu daha verimli hale getirelim,

678
00:12:27,990 --> 00:12:28,000

 

679
00:12:28,000 --> 00:12:29,750

burada nakit veya yapımızdaki yeni işlevi çağırıyoruz ve

680
00:12:29,750 --> 00:12:31,829
burada nakit veya yapımızdaki yeni işlevi çağırıyoruz ve
 

681
00:12:31,829 --> 00:12:34,069

 

682
00:12:34,069 --> 00:12:35,430

 

683
00:12:35,430 --> 00:12:35,440

 

684
00:12:35,440 --> 00:12:37,670

nakit yapılandırmamızdaki hesaplama alanına ayarlanacak olan kapanışımıza geçelim.

685
00:12:37,670 --> 00:12:37,680
nakit yapılandırmamızdaki hesaplama alanına ayarlanacak olan kapanışımıza geçelim.
 

686
00:12:37,680 --> 00:12:42,870
nakit yapılandırmamızdaki hesaplama alanına ayarlanacak olan kapanışımıza geçelim.
değişken ismimizi önbelleğe alınmış sonuca değiştirin,

687
00:12:42,870 --> 00:12:42,880

 

688
00:12:42,880 --> 00:12:44,310

ayrıca değişkenimizi

689
00:12:44,310 --> 00:12:44,320
ayrıca değişkenimizi
 

690
00:12:44,320 --> 00:12:45,910
ayrıca değişkenimizi
değişken yapmak isteyeceğiz çünkü

691
00:12:45,910 --> 00:12:46,790
değişken yapmak isteyeceğiz çünkü
 

692
00:12:46,790 --> 00:12:46,800

 

693
00:12:46,800 --> 00:12:52,389

önbelleğimizi veya yapımızı değiştirecek olan değer yöntemini çağıracağız,

694
00:12:52,389 --> 00:12:52,399
önbelleğimizi veya yapımızı değiştirecek olan değer yöntemini çağıracağız,
 

695
00:12:52,399 --> 00:12:54,230
önbelleğimizi veya yapımızı değiştirecek olan değer yöntemini çağıracağız,
sonra pahalı kapatmayı çağırmak yerine önbelleğe

696
00:12:54,230 --> 00:12:55,509
sonra pahalı kapatmayı çağırmak yerine önbelleğe
 

697
00:12:55,509 --> 00:12:55,519

 

698
00:12:55,519 --> 00:13:07,590

alınmış sonuç nokta değerini arayacağız

699
00:13:07,590 --> 00:13:07,600
alınmış sonuç nokta değerini arayacağız
 

700
00:13:07,600 --> 00:13:13,269
alınmış sonuç nokta değerini arayacağız
ve devam edelim ve  programımızı tekrar çalıştırın

701
00:13:13,269 --> 00:13:13,279

 

702
00:13:13,279 --> 00:13:15,269

ve gördüğünüz gibi bu sefer pahalı operasyonumuzu sadece bir

703
00:13:15,269 --> 00:13:17,590
ve gördüğünüz gibi bu sefer pahalı operasyonumuzu sadece bir
 

704
00:13:17,590 --> 00:13:17,600

 

705
00:13:17,600 --> 00:13:20,389

kez çağırıyoruz şimdi değerleri önbelleğe almak genellikle

706
00:13:20,389 --> 00:13:20,399
kez çağırıyoruz şimdi değerleri önbelleğe almak genellikle
 

707
00:13:20,399 --> 00:13:22,470
kez çağırıyoruz şimdi değerleri önbelleğe almak genellikle
yararlı bir davranış, bu yüzden önbelleğimizi farklı bir şekilde kullanmak isteyebiliriz.

708
00:13:22,470 --> 00:13:23,350
yararlı bir davranış, bu yüzden önbelleğimizi farklı bir şekilde kullanmak isteyebiliriz.
 

709
00:13:23,350 --> 00:13:23,360

 

710
00:13:23,360 --> 00:13:25,590

bağlamlar ama

711
00:13:25,590 --> 00:13:25,600
bağlamlar ama
 

712
00:13:25,600 --> 00:13:27,910
bağlamlar ama
bu sorunu yapmamızı engelleyen iki

713
00:13:27,910 --> 00:13:27,920
bu sorunu yapmamızı engelleyen iki
 

714
00:13:27,920 --> 00:13:30,230
bu sorunu yapmamızı engelleyen iki
sorun var bir numaralı değer yöntemimizi çağırmak

715
00:13:30,230 --> 00:13:32,069
sorun var bir numaralı değer yöntemimizi çağırmak
 

716
00:13:32,069 --> 00:13:32,079

 

717
00:13:32,079 --> 00:13:35,190

, arg input parametresi ne olursa olsun aynı değeri döndürecek

718
00:13:35,190 --> 00:13:35,200
, arg input parametresi ne olursa olsun aynı değeri döndürecek
 

719
00:13:35,200 --> 00:13:37,829
, arg input parametresi ne olursa olsun aynı değeri döndürecek
örneğin

720
00:13:37,829 --> 00:13:37,839
örneğin
 

721
00:13:37,839 --> 00:13:39,910
örneğin
diyelim ki value yöntemini ilk çağırdığımızda

722
00:13:39,910 --> 00:13:39,920
diyelim ki value yöntemini ilk çağırdığımızda
 

723
00:13:39,920 --> 00:13:43,110
diyelim ki value yöntemini ilk çağırdığımızda
bir  arg için değer olarak,

724
00:13:43,110 --> 00:13:43,120
bir  arg için değer olarak,
 

725
00:13:43,120 --> 00:13:44,389
bir  arg için değer olarak,
çünkü bu, değer yöntemini ilk kez çağırdığımız zaman self.value

726
00:13:44,389 --> 00:13:46,790
çünkü bu, değer yöntemini ilk kez çağırdığımız zaman self.value
 

727
00:13:46,790 --> 00:13:46,800

 

728
00:13:46,800 --> 00:13:48,230

, none olarak değerlendireceğiz,

729
00:13:48,230 --> 00:13:48,240
, none olarak değerlendireceğiz,
 

730
00:13:48,240 --> 00:13:50,150
, none olarak değerlendireceğiz,
bu nedenle none dalına gideceğiz ve

731
00:13:50,150 --> 00:13:50,160
bu nedenle none dalına gideceğiz ve
 

732
00:13:50,160 --> 00:13:51,350
bu nedenle none dalına gideceğiz ve
ardından

733
00:13:51,350 --> 00:13:51,360
ardından
 

734
00:13:51,360 --> 00:13:53,910
ardından
, eşit olacak olan arg ile kapanışımızı çağıracağız.

735
00:13:53,910 --> 00:13:55,269
, eşit olacak olan arg ile kapanışımızı çağıracağız.
 

736
00:13:55,269 --> 00:13:55,279

 

737
00:13:55,279 --> 00:13:57,670

o zaman elde edilen değeri alıp self.value içine

738
00:13:57,670 --> 00:13:58,870
o zaman elde edilen değeri alıp self.value içine
 

739
00:13:58,870 --> 00:13:58,880

 

740
00:13:58,880 --> 00:14:01,670

kaydedeceğiz şimdi değer metodumuzu tekrar çağırdığımızı hayal edin

741
00:14:01,670 --> 00:14:01,680
kaydedeceğiz şimdi değer metodumuzu tekrar çağırdığımızı hayal edin
 

742
00:14:01,680 --> 00:14:02,150
kaydedeceğiz şimdi değer metodumuzu tekrar çağırdığımızı hayal edin

743
00:14:02,150 --> 00:14:02,160

 

744
00:14:02,160 --> 00:14:04,870

ama bu sefer arg için değer olarak

745
00:14:04,870 --> 00:14:05,590
ama bu sefer arg için değer olarak
 

746
00:14:05,590 --> 00:14:05,600

 

747
00:14:05,600 --> 00:14:08,470

2'yi geçiyoruz bu sefer self.value zaten var

748
00:14:08,470 --> 00:14:08,480
2'yi geçiyoruz bu sefer self.value zaten var
 

749
00:14:08,480 --> 00:14:10,550
2'yi geçiyoruz bu sefer self.value zaten var
o yüzden gideceğiz  toplam koluna girin ve sadece

750
00:14:10,550 --> 00:14:10,560
o yüzden gideceğiz  toplam koluna girin ve sadece
 

751
00:14:10,560 --> 00:14:13,350
o yüzden gideceğiz  toplam koluna girin ve sadece
toplamda depolanan değeri döndürün bu

752
00:14:13,350 --> 00:14:13,360
toplamda depolanan değeri döndürün bu
 

753
00:14:13,360 --> 00:14:14,389
toplamda depolanan değeri döndürün bu
sorunludur çünkü

754
00:14:14,389 --> 00:14:14,399
sorunludur çünkü
 

755
00:14:14,399 --> 00:14:16,790
sorunludur çünkü
r kapanışımıza geçer, bu da kapanışımızdan

756
00:14:16,790 --> 00:14:16,800
r kapanışımıza geçer, bu da kapanışımızdan
 

757
00:14:16,800 --> 00:14:18,790
r kapanışımıza geçer, bu da kapanışımızdan
gelen sonuçtaki değeri değiştirebileceği anlamına gelir,

758
00:14:18,790 --> 00:14:18,800
gelen sonuçtaki değeri değiştirebileceği anlamına gelir,
 

759
00:14:18,800 --> 00:14:19,430
gelen sonuçtaki değeri değiştirebileceği anlamına gelir,

760
00:14:19,430 --> 00:14:19,440

 

761
00:14:19,440 --> 00:14:21,269

ancak mevcut

762
00:14:21,269 --> 00:14:21,279
ancak mevcut
 

763
00:14:21,279 --> 00:14:23,430
ancak mevcut
uygulamamızla değer her zaman re'ye

764
00:14:23,430 --> 00:14:23,440
uygulamamızla değer her zaman re'ye
 

765
00:14:23,440 --> 00:14:25,590
uygulamamızla değer her zaman re'ye
eşit olacaktır.  Temel olarak söylediğim şeye değer vermek için ilk çağrıya

766
00:14:25,590 --> 00:14:25,600
eşit olacaktır.  Temel olarak söylediğim şeye değer vermek için ilk çağrıya
 

767
00:14:25,600 --> 00:14:27,829
eşit olacaktır.  Temel olarak söylediğim şeye değer vermek için ilk çağrıya
iletilen argümanla kapanışımızı çağırmanın sonucu, argüman

768
00:14:27,829 --> 00:14:29,110
iletilen argümanla kapanışımızı çağırmanın sonucu, argüman
 

769
00:14:29,110 --> 00:14:29,120

 

770
00:14:29,120 --> 00:14:31,350

ne olursa olsun

771
00:14:31,350 --> 00:14:31,360
ne olursa olsun
 

772
00:14:31,360 --> 00:14:33,189
ne olursa olsun
bir değeri paraya çevirmek yerine,

773
00:14:33,189 --> 00:14:35,590
bir değeri paraya çevirmek yerine,
 

774
00:14:35,590 --> 00:14:36,710

 

775
00:14:36,710 --> 00:14:36,720

 

776
00:14:36,720 --> 00:14:39,110

iletilen her argüman için bir değeri paraya çevirmemiz gerektiğidir

777
00:14:39,110 --> 00:14:39,120
iletilen her argüman için bir değeri paraya çevirmemiz gerektiğidir
 

778
00:14:39,120 --> 00:14:40,790
iletilen her argüman için bir değeri paraya çevirmemiz gerektiğidir
, çünkü argüman

779
00:14:40,790 --> 00:14:40,800
, çünkü argüman
 

780
00:14:40,800 --> 00:14:43,750
, çünkü argüman
değeri bir alıştırma olarak etkiler,

781
00:14:43,750 --> 00:14:43,760
değeri bir alıştırma olarak etkiler,
 

782
00:14:43,760 --> 00:14:45,910
değeri bir alıştırma olarak etkiler,
bu uygulamayı

783
00:14:45,910 --> 00:14:45,920
bu uygulamayı
 

784
00:14:45,920 --> 00:14:46,629
bu uygulamayı

785
00:14:46,629 --> 00:14:46,639

 

786
00:14:46,639 --> 00:14:48,949

tek bir değer yerine bir

787
00:14:48,949 --> 00:14:48,959
tek bir değer yerine bir
 

788
00:14:48,959 --> 00:14:50,389
tek bir değer yerine bir
hashmap depolayarak düzeltebilirsiniz, hashmap'in anahtarları,

789
00:14:50,389 --> 00:14:50,399
hashmap depolayarak düzeltebilirsiniz, hashmap'in anahtarları,
 

790
00:14:50,399 --> 00:14:53,110
hashmap depolayarak düzeltebilirsiniz, hashmap'in anahtarları,
değere iletilen argüman olacaktır ve

791
00:14:53,110 --> 00:14:53,120
değere iletilen argüman olacaktır ve
 

792
00:14:53,120 --> 00:14:54,470
değere iletilen argüman olacaktır ve
hashmap'inizdeki değerler,

793
00:14:54,470 --> 00:14:57,189
hashmap'inizdeki değerler,
 

794
00:14:57,189 --> 00:14:57,199

 

795
00:14:57,199 --> 00:14:58,069


796
00:14:58,069 --> 00:14:58,079

 

797
00:14:58,079 --> 00:15:00,550

o zaman argümanla kapatmayı çağırmanın sonucu olacaktır.

798
00:15:00,550 --> 00:15:00,560
o zaman argümanla kapatmayı çağırmanın sonucu olacaktır.
 

799
00:15:00,560 --> 00:15:01,670
o zaman argümanla kapatmayı çağırmanın sonucu olacaktır.
bu değer

800
00:15:01,670 --> 00:15:01,680
bu değer
 

801
00:15:01,680 --> 00:15:04,150
bu değer
yönteminin gövdesinde, karma haritanızın içindeki arg'yi aramanız gerekir

802
00:15:04,150 --> 00:15:05,110
yönteminin gövdesinde, karma haritanızın içindeki arg'yi aramanız gerekir
 

803
00:15:05,110 --> 00:15:05,120

 

804
00:15:05,120 --> 00:15:07,829

ve bu arg için bir değer varsa, o zaman sadece değeri döndürün

805
00:15:07,829 --> 00:15:09,110
ve bu arg için bir değer varsa, o zaman sadece değeri döndürün
 

806
00:15:09,110 --> 00:15:09,120

 

807
00:15:09,120 --> 00:15:11,590

ve yoksa

808
00:15:11,590 --> 00:15:11,600
ve yoksa
 

809
00:15:11,600 --> 00:15:13,829
ve yoksa
, pahalı hesaplamanızı çalıştırın ve

810
00:15:13,829 --> 00:15:13,839
, pahalı hesaplamanızı çalıştırın ve
 

811
00:15:13,839 --> 00:15:14,550
, pahalı hesaplamanızı çalıştırın ve
sonucu

812
00:15:14,550 --> 00:15:14,560
sonucu
 

813
00:15:14,560 --> 00:15:16,790
sonucu
içinde saklayın  karma haritanız,

814
00:15:16,790 --> 00:15:16,800
içinde saklayın  karma haritanız,
 

815
00:15:16,800 --> 00:15:18,949
içinde saklayın  karma haritanız,
önbellek uygulamamızdaki ikinci sorun,

816
00:15:18,949 --> 00:15:18,959
önbellek uygulamamızdaki ikinci sorun,
 

817
00:15:18,959 --> 00:15:21,350
önbellek uygulamamızdaki ikinci sorun,
sabit kodlanmış türler kullanmamızdır, örneğin, kapatmamızın

818
00:15:21,350 --> 00:15:22,710
sabit kodlanmış türler kullanmamızdır, örneğin, kapatmamızın
 

819
00:15:22,710 --> 00:15:22,720

 

820
00:15:22,720 --> 00:15:25,189

bir tamsayı kabul etmesi ve bir tamsayı döndürmesi gerektiğini söylüyoruz.

821
00:15:25,189 --> 00:15:26,470
bir tamsayı kabul etmesi ve bir tamsayı döndürmesi gerektiğini söylüyoruz.
 

822
00:15:26,470 --> 00:15:26,480

 

823
00:15:26,480 --> 00:15:28,949

ve bunu düzeltmek için değerimizin de bir tamsayı olması gerekiyor

824
00:15:28,949 --> 00:15:28,959
ve bunu düzeltmek için değerimizin de bir tamsayı olması gerekiyor
 

825
00:15:28,959 --> 00:15:29,590
ve bunu düzeltmek için değerimizin de bir tamsayı olması gerekiyor

826
00:15:29,590 --> 00:15:32,069

 

827
00:15:32,069 --> 00:15:32,079

 

828
00:15:32,079 --> 00:15:32,710

,

829
00:15:32,710 --> 00:15:32,720
,
 

830
00:15:32,720 --> 00:15:34,870
,
sabit kodlanmış değerler yerine basitçe jenerikleri kullanabilirsiniz

831
00:15:34,870 --> 00:15:34,880
sabit kodlanmış değerler yerine basitçe jenerikleri kullanabilirsiniz
 

832
00:15:34,880 --> 00:15:36,629
sabit kodlanmış değerler yerine basitçe jenerikleri kullanabilirsiniz
, bahsetmek istediğim son şey,

833
00:15:36,629 --> 00:15:38,389
, bahsetmek istediğim son şey,
 

834
00:15:38,389 --> 00:15:38,399

 

835
00:15:38,399 --> 00:15:41,189

işlevlerin aksine, kapatmaların

836
00:15:41,189 --> 00:15:41,199
işlevlerin aksine, kapatmaların
 

837
00:15:41,199 --> 00:15:42,069
işlevlerin aksine, kapatmaların

838
00:15:42,069 --> 00:15:42,079

 

839
00:15:42,079 --> 00:15:43,990

içinde tanımlanan değişkenlere erişimi olan çevreyi kapatmalarla yakalamaktır.

840
00:15:43,990 --> 00:15:44,000
içinde tanımlanan değişkenlere erişimi olan çevreyi kapatmalarla yakalamaktır.
 

841
00:15:44,000 --> 00:15:45,829
içinde tanımlanan değişkenlere erişimi olan çevreyi kapatmalarla yakalamaktır.
Kapanışın tanımlandığı kapsam

842
00:15:45,829 --> 00:15:45,839
Kapanışın tanımlandığı kapsam
 

843
00:15:45,839 --> 00:15:47,749
Kapanışın tanımlandığı kapsam
burada en üstte basit bir örnek,

844
00:15:47,749 --> 00:15:48,870
burada en üstte basit bir örnek,
 

845
00:15:48,870 --> 00:15:48,880

 

846
00:15:48,880 --> 00:15:51,590

x adında dört olan bir değişkenimiz var, sonra x'e eşit adında bir kapanışımız var,

847
00:15:51,590 --> 00:15:53,350
x adında dört olan bir değişkenimiz var, sonra x'e eşit adında bir kapanışımız var,
 

848
00:15:53,350 --> 00:15:53,360

 

849
00:15:53,360 --> 00:15:55,749

bu da z adlı bir değişkeni alan ve

850
00:15:55,749 --> 00:15:55,759
bu da z adlı bir değişkeni alan ve
 

851
00:15:55,759 --> 00:15:57,509
bu da z adlı bir değişkeni alan ve
sonra bir boolean döndüren bir

852
00:15:57,509 --> 00:15:57,519
sonra bir boolean döndüren bir
 

853
00:15:57,519 --> 00:15:59,110
sonra bir boolean döndüren bir
boolean  bu ifadeye eşit olmak için

854
00:15:59,110 --> 00:15:59,120
boolean  bu ifadeye eşit olmak için
 

855
00:15:59,120 --> 00:16:00,949
boolean  bu ifadeye eşit olmak için
z

856
00:16:00,949 --> 00:16:00,959
z
 

857
00:16:00,959 --> 00:16:03,590
z
eşittir x şimdi x bizim kapanışımızın dışında tanımlanmış olsa da,

858
00:16:03,590 --> 00:16:05,110
eşittir x şimdi x bizim kapanışımızın dışında tanımlanmış olsa da,
 

859
00:16:05,110 --> 00:16:05,120

 

860
00:16:05,120 --> 00:16:07,430

kapanışımızın hala x'e erişimi var

861
00:16:07,430 --> 00:16:07,440
kapanışımızın hala x'e erişimi var
 

862
00:16:07,440 --> 00:16:09,030
kapanışımızın hala x'e erişimi var
çünkü ikisi de

863
00:16:09,030 --> 00:16:09,040
çünkü ikisi de
 

864
00:16:09,040 --> 00:16:09,990
çünkü ikisi de
aynı kapsamda tanımlanmışlar

865
00:16:09,990 --> 00:16:10,000
aynı kapsamda tanımlanmışlar
 

866
00:16:10,000 --> 00:16:11,990
aynı kapsamda tanımlanmışlar
o zaman y adında bir değişken tanımlıyoruz

867
00:16:11,990 --> 00:16:12,000
o zaman y adında bir değişken tanımlıyoruz
 

868
00:16:12,000 --> 00:16:13,749
o zaman y adında bir değişken tanımlıyoruz
ve onu da eşitliyoruz  dörde kadar,

869
00:16:13,749 --> 00:16:13,759
ve onu da eşitliyoruz  dörde kadar,
 

870
00:16:13,759 --> 00:16:16,710
ve onu da eşitliyoruz  dörde kadar,
son olarak y'den geçerek kapanışımızı

871
00:16:16,710 --> 00:16:16,720
son olarak y'den geçerek kapanışımızı
 

872
00:16:16,720 --> 00:16:18,470
son olarak y'den geçerek kapanışımızı
çağırırız, kapanışımıza yapılan çağrı

873
00:16:18,470 --> 00:16:20,310
çağırırız, kapanışımıza yapılan çağrı
 

874
00:16:20,310 --> 00:16:20,320

 

875
00:16:20,320 --> 00:16:22,629

, çağrı kulesi işlevi yanlış sonuçlanırsa panik yapacak olan bir assert makrosu içine sarılır,

876
00:16:22,629 --> 00:16:23,590
, çağrı kulesi işlevi yanlış sonuçlanırsa panik yapacak olan bir assert makrosu içine sarılır,
 

877
00:16:23,590 --> 00:16:23,600

 

878
00:16:23,600 --> 00:16:26,069

bu yüzden devam edelim ve programımızı çalıştıralım

879
00:16:26,069 --> 00:16:26,079
bu yüzden devam edelim ve programımızı çalıştıralım
 

880
00:16:26,079 --> 00:16:28,710
bu yüzden devam edelim ve programımızı çalıştıralım

881
00:16:28,710 --> 00:16:28,720

 

882
00:16:28,720 --> 00:16:31,670

ve gördüğünüz gibi panik yapmadık şimdi

883
00:16:31,670 --> 00:16:33,509
ve gördüğünüz gibi panik yapmadık şimdi
 

884
00:16:33,509 --> 00:16:33,519

 

885
00:16:33,519 --> 00:16:34,230


886
00:16:34,230 --> 00:16:34,240

 

887
00:16:34,240 --> 00:16:36,710

bir kapatma yerine bir fonksiyon kullanırsak ne olacağını görelim, böylece

888
00:16:36,710 --> 00:16:36,720
bir kapatma yerine bir fonksiyon kullanırsak ne olacağını görelim, böylece
 

889
00:16:36,720 --> 00:16:37,670
bir kapatma yerine bir fonksiyon kullanırsak ne olacağını görelim, böylece
x'e eşit olan

890
00:16:37,670 --> 00:16:37,680
x'e eşit olan
 

891
00:16:37,680 --> 00:16:41,829
x'e eşit olan
kapanışımızı bir fonksiyona çevireceğiz,

892
00:16:41,829 --> 00:16:41,839

 

893
00:16:41,839 --> 00:16:43,910

burada x'in altında bazı kırmızı dalgalı çizgiler görebilirsiniz

894
00:16:43,910 --> 00:16:43,920
burada x'in altında bazı kırmızı dalgalı çizgiler görebilirsiniz
 

895
00:16:43,920 --> 00:16:45,910
burada x'in altında bazı kırmızı dalgalı çizgiler görebilirsiniz
ve eğer i  üzerine gelin

896
00:16:45,910 --> 00:16:45,920
ve eğer i  üzerine gelin
 

897
00:16:45,920 --> 00:16:47,030
ve eğer i  üzerine gelin
, hatanın

898
00:16:47,030 --> 00:16:47,040
, hatanın
 

899
00:16:47,040 --> 00:16:49,509
, hatanın
bir işlevin içindeki dinamik ortamı yakalayamadığını görebilirsiniz,

900
00:16:49,509 --> 00:16:50,470
bir işlevin içindeki dinamik ortamı yakalayamadığını görebilirsiniz,
 

901
00:16:50,470 --> 00:16:50,480

 

902
00:16:50,480 --> 00:16:52,710

bunun yerine bir kapatma kullanın, bu nedenle derleyici

903
00:16:52,710 --> 00:16:52,720
bunun yerine bir kapatma kullanın, bu nedenle derleyici
 

904
00:16:52,720 --> 00:16:54,230
bunun yerine bir kapatma kullanın, bu nedenle derleyici
aslında bize

905
00:16:54,230 --> 00:16:54,240
aslında bize
 

906
00:16:54,240 --> 00:16:56,550
aslında bize
bir işlev yerine bir kapatma kullanmamızı söylüyor çünkü

907
00:16:56,550 --> 00:16:56,560
bir işlev yerine bir kapatma kullanmamızı söylüyor çünkü
 

908
00:16:56,560 --> 00:16:58,230
bir işlev yerine bir kapatma kullanmamızı söylüyor çünkü
kapaklar ortamlarını yakalayabilirler,

909
00:16:58,230 --> 00:16:58,240
kapaklar ortamlarını yakalayabilirler,
 

910
00:16:58,240 --> 00:16:58,949
kapaklar ortamlarını yakalayabilirler,

911
00:16:58,949 --> 00:16:58,959

 

912
00:16:58,959 --> 00:17:01,189

fazladan bellek kullanmaları gerekir

913
00:17:01,189 --> 00:17:01,199
fazladan bellek kullanmaları gerekir
 

914
00:17:01,199 --> 00:17:02,310
fazladan bellek kullanmaları gerekir
bu bağlamı depolamak için

915
00:17:02,310 --> 00:17:02,320
bu bağlamı depolamak için
 

916
00:17:02,320 --> 00:17:04,069
bu bağlamı depolamak için
ancak işlevler çevrelerini yakalamadıkları

917
00:17:04,069 --> 00:17:04,079
ancak işlevler çevrelerini yakalamadıkları
 

918
00:17:04,079 --> 00:17:06,069
ancak işlevler çevrelerini yakalamadıkları
için

919
00:17:06,069 --> 00:17:06,079
için
 

920
00:17:06,079 --> 00:17:07,429
için
aynı genel gider

921
00:17:07,429 --> 00:17:07,439
aynı genel gider
 

922
00:17:07,439 --> 00:17:09,189
aynı genel gider
kapamalarına maruz kalmazlar, çevrelerinden değerleri,

923
00:17:09,189 --> 00:17:10,870
kapamalarına maruz kalmazlar, çevrelerinden değerleri,
 

924
00:17:10,870 --> 00:17:10,880

 

925
00:17:10,880 --> 00:17:13,110

bir

926
00:17:13,110 --> 00:17:13,120
bir
 

927
00:17:13,120 --> 00:17:14,549
bir
işlevin değişmez bir şekilde ödünç

928
00:17:14,549 --> 00:17:14,559
işlevin değişmez bir şekilde ödünç
 

929
00:17:14,559 --> 00:17:17,590
işlevin değişmez bir şekilde ödünç
alarak sahiplik alarak girdi parametrelerinde alabileceği üç yolla doğrudan eşleyen üç şekilde yakalar

930
00:17:17,590 --> 00:17:18,870
alarak sahiplik alarak girdi parametrelerinde alabileceği üç yolla doğrudan eşleyen üç şekilde yakalar
 

931
00:17:18,870 --> 00:17:18,880

 

932
00:17:18,880 --> 00:17:21,909

veya değişmez bir şekilde ödünç alarak

933
00:17:21,909 --> 00:17:21,919
veya değişmez bir şekilde ödünç alarak
 

934
00:17:21,919 --> 00:17:23,669
veya değişmez bir şekilde ödünç alarak
, çevreyi yakalamanın bu üç yolu,

935
00:17:23,669 --> 00:17:26,069
, çevreyi yakalamanın bu üç yolu,
 

936
00:17:26,069 --> 00:17:26,079

 

937
00:17:26,079 --> 00:17:27,350

daha önce

938
00:17:27,350 --> 00:17:27,360
daha önce
 

939
00:17:27,360 --> 00:17:30,470
daha önce
bahsettiğimiz fn bir kez f ve mu ve

940
00:17:30,470 --> 00:17:30,480
bahsettiğimiz fn bir kez f ve mu ve
 

941
00:17:30,480 --> 00:17:33,270
bahsettiğimiz fn bir kez f ve mu ve
fn bir kez fn fn olan işlev özelliklerinde kodlanmıştır.

942
00:17:33,270 --> 00:17:33,280
fn bir kez fn fn olan işlev özelliklerinde kodlanmıştır.
 

943
00:17:33,280 --> 00:17:34,870
fn bir kez fn fn olan işlev özelliklerinde kodlanmıştır.
kapanış

944
00:17:34,870 --> 00:17:34,880
kapanış
 

945
00:17:34,880 --> 00:17:36,710
kapanış
ortamı içindeki değişkenlerin sahipliğini alır, adın bir kez kısmı,

946
00:17:36,710 --> 00:17:36,720
ortamı içindeki değişkenlerin sahipliğini alır, adın bir kez kısmı,
 

947
00:17:36,720 --> 00:17:38,630
ortamı içindeki değişkenlerin sahipliğini alır, adın bir kez kısmı,
kapanışların

948
00:17:38,630 --> 00:17:38,640
kapanışların
 

949
00:17:38,640 --> 00:17:40,230
kapanışların
aynı değişkenlerin sahipliğini bir kereden fazla alamayacağı gerçeğini temsil eder,

950
00:17:40,230 --> 00:17:42,150
aynı değişkenlerin sahipliğini bir kereden fazla alamayacağı gerçeğini temsil eder,
 

951
00:17:42,150 --> 00:17:42,160

 

952
00:17:42,160 --> 00:17:43,990

bu nedenle bu kapanışlara yalnızca denilebilir

953
00:17:43,990 --> 00:17:44,000
bu nedenle bu kapanışlara yalnızca denilebilir
 

954
00:17:44,000 --> 00:17:45,510
bu nedenle bu kapanışlara yalnızca denilebilir
fn mu

955
00:17:45,510 --> 00:17:48,549
fn mu
 

956
00:17:48,549 --> 00:17:48,559

 

957
00:17:48,559 --> 00:17:51,029

değişken olarak değerleri ödünç alır ve fn değişmez şekilde ödünç alır

958
00:17:51,029 --> 00:17:51,039
değişken olarak değerleri ödünç alır ve fn değişmez şekilde ödünç alır
 

959
00:17:51,039 --> 00:17:52,870
değişken olarak değerleri ödünç alır ve fn değişmez şekilde ödünç alır
bir closure pası oluşturduğunuzda,

960
00:17:52,870 --> 00:17:54,070
bir closure pası oluşturduğunuzda,
 

961
00:17:54,070 --> 00:17:54,080

 

962
00:17:54,080 --> 00:17:56,630

closure ortamındaki değerleri nasıl kullandığınıza bağlı olarak bu özelliklerden hangisini kullanacağınızı belirler,

963
00:17:56,630 --> 00:17:58,230
closure ortamındaki değerleri nasıl kullandığınıza bağlı olarak bu özelliklerden hangisini kullanacağınızı belirler,
 

964
00:17:58,230 --> 00:17:58,240

 

965
00:17:58,240 --> 00:18:00,230

ancak

966
00:18:00,230 --> 00:18:00,240
ancak
 

967
00:18:00,240 --> 00:18:02,710
ancak
bunun önüne

968
00:18:02,710 --> 00:18:02,720
bunun önüne
 

969
00:18:02,720 --> 00:18:05,270
bunun önüne
move anahtar sözcüğünü kullanarak kapatmayı kendi ortamında kullandığı değerlerin sahipliğini almaya zorlayabiliriz

970
00:18:05,270 --> 00:18:05,280
move anahtar sözcüğünü kullanarak kapatmayı kendi ortamında kullandığı değerlerin sahipliğini almaya zorlayabiliriz
 

971
00:18:05,280 --> 00:18:05,909
move anahtar sözcüğünü kullanarak kapatmayı kendi ortamında kullandığı değerlerin sahipliğini almaya zorlayabiliriz

972
00:18:05,909 --> 00:18:05,919

 

973
00:18:05,919 --> 00:18:08,070

.  closure bu çoğunlukla

974
00:18:08,070 --> 00:18:09,590
.  closure bu çoğunlukla
 

975
00:18:09,590 --> 00:18:09,600

 

976
00:18:09,600 --> 00:18:10,470

bir iş parçacığından başka bir iş

977
00:18:10,470 --> 00:18:10,480
bir iş parçacığından başka bir iş
 

978
00:18:10,480 --> 00:18:12,470
bir iş parçacığından başka bir iş
parçacığına bir kapatma geçirirken kullanışlıdır, böylece

979
00:18:12,470 --> 00:18:12,480
parçacığına bir kapatma geçirirken kullanışlıdır, böylece
 

980
00:18:12,480 --> 00:18:14,310
parçacığına bir kapatma geçirirken kullanışlıdır, böylece
değişkenlerin sahipliğini bir

981
00:18:14,310 --> 00:18:14,320
değişkenlerin sahipliğini bir
 

982
00:18:14,320 --> 00:18:14,789
değişkenlerin sahipliğini bir
iş

983
00:18:14,789 --> 00:18:14,799
iş
 

984
00:18:14,799 --> 00:18:17,029
iş
parçacığından diğer iş parçacığına da aktarabilirsiniz, örneğin bu

985
00:18:17,029 --> 00:18:17,039
parçacığından diğer iş parçacığına da aktarabilirsiniz, örneğin bu
 

986
00:18:17,039 --> 00:18:19,029
parçacığından diğer iş parçacığına da aktarabilirsiniz, örneğin bu
durumda x eşittir bir vektör

987
00:18:19,029 --> 00:18:19,039
durumda x eşittir bir vektör
 

988
00:18:19,039 --> 00:18:21,750
durumda x eşittir bir vektör
bizim kapanışımız  bu değişmez,

989
00:18:21,750 --> 00:18:21,760
bizim kapanışımız  bu değişmez,
 

990
00:18:21,760 --> 00:18:22,789
bizim kapanışımız  bu değişmez,
sonra

991
00:18:22,789 --> 00:18:22,799
sonra
 

992
00:18:22,799 --> 00:18:25,990
sonra
x yazdırırız ve sonra bir vektöre eşit y'ye sahip

993
00:18:25,990 --> 00:18:26,950
x yazdırırız ve sonra bir vektöre eşit y'ye sahip
 

994
00:18:26,950 --> 00:18:26,960

 

995
00:18:26,960 --> 00:18:28,950

oluruz ve sonra kapanışımıza tekrar

996
00:18:28,950 --> 00:18:28,960
oluruz ve sonra kapanışımıza tekrar
 

997
00:18:28,960 --> 00:18:31,110
oluruz ve sonra kapanışımıza tekrar
y'yi geçerek ve

998
00:18:31,110 --> 00:18:31,120
y'yi geçerek ve
 

999
00:18:31,120 --> 00:18:33,750
y'yi geçerek ve
bunun retu olduğunu iddia ederek kapanışı çağırırız.  rns şimdi doğru çünkü

1000
00:18:33,750 --> 00:18:33,760
bunun retu olduğunu iddia ederek kapanışı çağırırız.  rns şimdi doğru çünkü
 

1001
00:18:33,760 --> 00:18:34,549
bunun retu olduğunu iddia ederek kapanışı çağırırız.  rns şimdi doğru çünkü
kapanışımızın içinde

1002
00:18:34,549 --> 00:18:34,559
kapanışımızın içinde
 

1003
00:18:34,559 --> 00:18:37,590
kapanışımızın içinde
sadece x'i z'ye karşı değerlendiriyoruz

1004
00:18:37,590 --> 00:18:40,150
sadece x'i z'ye karşı değerlendiriyoruz
 

1005
00:18:40,150 --> 00:18:40,160

 

1006
00:18:40,160 --> 00:18:41,029

, kapanışımızın içindeki x'in sahipliğini almıyoruz,

1007
00:18:41,029 --> 00:18:41,039
, kapanışımızın içindeki x'in sahipliğini almıyoruz,
 

1008
00:18:41,039 --> 00:18:43,350
, kapanışımızın içindeki x'in sahipliğini almıyoruz,
ancak yine, kapanış tanımımızın

1009
00:18:43,350 --> 00:18:44,390
ancak yine, kapanış tanımımızın
 

1010
00:18:44,390 --> 00:18:44,400

 

1011
00:18:44,400 --> 00:18:46,870

önüne move anahtar sözcüğünü belirterek,

1012
00:18:46,870 --> 00:18:50,710
önüne move anahtar sözcüğünü belirterek,
 

1013
00:18:50,710 --> 00:18:50,720

 

1014
00:18:50,720 --> 00:18:53,669

şimdi kapanışımız olan kapanışı sahiplenmeye zorlayabiliriz  x'in sahipliğini alıyor

1015
00:18:53,669 --> 00:18:53,679
şimdi kapanışımız olan kapanışı sahiplenmeye zorlayabiliriz  x'in sahipliğini alıyor
 

1016
00:18:53,679 --> 00:18:54,070
şimdi kapanışımız olan kapanışı sahiplenmeye zorlayabiliriz  x'in sahipliğini alıyor
ve

1017
00:18:54,070 --> 00:18:54,080
ve
 

1018
00:18:54,080 --> 00:18:56,310
ve
baskı ifademizde kapanış tanımımızın altında bir hata alıyoruz

1019
00:18:56,310 --> 00:18:56,320
baskı ifademizde kapanış tanımımızın altında bir hata alıyoruz
 

1020
00:18:56,320 --> 00:18:58,390
baskı ifademizde kapanış tanımımızın altında bir hata alıyoruz
,

1021
00:18:58,390 --> 00:18:58,400
,
 

1022
00:18:58,400 --> 00:19:00,310
,
eğer kırmızı dalgalı çizgilerin üzerine gelirsem

1023
00:19:00,310 --> 00:19:00,320
eğer kırmızı dalgalı çizgilerin üzerine gelirsem
 

1024
00:19:00,320 --> 00:19:01,590
eğer kırmızı dalgalı çizgilerin üzerine gelirsem
, taşındıktan

1025
00:19:01,590 --> 00:19:01,600
, taşındıktan
 

1026
00:19:01,600 --> 00:19:04,230
, taşındıktan
sonra ödünç alınan bir değer kullandığımızı söylediğini görebilirsiniz,

1027
00:19:04,230 --> 00:19:04,950
sonra ödünç alınan bir değer kullandığımızı söylediğini görebilirsiniz,
 

1028
00:19:04,950 --> 00:19:04,960

 

1029
00:19:04,960 --> 00:19:07,350

bu mantıklı çünkü yukarıda

1030
00:19:07,350 --> 00:19:07,360
bu mantıklı çünkü yukarıda
 

1031
00:19:07,360 --> 00:19:09,270
bu mantıklı çünkü yukarıda
kapanışımız x'in sahipliğini alıyor,

1032
00:19:09,270 --> 00:19:09,280
kapanışımız x'in sahipliğini alıyor,
 

1033
00:19:09,280 --> 00:19:12,150
kapanışımız x'in sahipliğini alıyor,
bu yüzden buraya taşındıktan sonra x'i kullanamayız,

1034
00:19:12,150 --> 00:19:13,029
bu yüzden buraya taşındıktan sonra x'i kullanamayız,
 

1035
00:19:13,029 --> 00:19:13,039

 

1036
00:19:13,039 --> 00:19:14,789

tamam bu, kapanışları ele aldığımız 13. bölümün birinci kısmı sona eriyor,

1037
00:19:14,789 --> 00:19:16,870
tamam bu, kapanışları ele aldığımız 13. bölümün birinci kısmı sona eriyor,
 

1038
00:19:16,870 --> 00:19:16,880

 

1039
00:19:16,880 --> 00:19:19,029

şimdi kapanışları

1040
00:19:19,029 --> 00:19:19,039
şimdi kapanışları
 

1041
00:19:19,039 --> 00:19:20,470
şimdi kapanışları
sindirmenin zor olabileceğini biliyorum

1042
00:19:20,470 --> 00:19:20,480
sindirmenin zor olabileceğini biliyorum
 

1043
00:19:20,480 --> 00:19:22,230
sindirmenin zor olabileceğini biliyorum
ve hepsini gözden geçirmedik

1044
00:19:22,230 --> 00:19:22,240
ve hepsini gözden geçirmedik
 

1045
00:19:22,240 --> 00:19:24,070
ve hepsini gözden geçirmedik
Kapanışları kullanmanın olası yolları,

1046
00:19:24,070 --> 00:19:24,080
Kapanışları kullanmanın olası yolları,
 

1047
00:19:24,080 --> 00:19:25,909
Kapanışları kullanmanın olası yolları,
bu yüzden

1048
00:19:25,909 --> 00:19:25,919
bu yüzden
 

1049
00:19:25,919 --> 00:19:28,150
bu yüzden
kapamalar hakkında daha fazla örnek içeren başka bir video görmek istiyorsanız

1050
00:19:28,150 --> 00:19:28,160
kapamalar hakkında daha fazla örnek içeren başka bir video görmek istiyorsanız
 

1051
00:19:28,160 --> 00:19:30,470
kapamalar hakkında daha fazla örnek içeren başka bir video görmek istiyorsanız
aşağıya yorum yapın ve tabii

1052
00:19:30,470 --> 00:19:30,480
aşağıya yorum yapın ve tabii
 

1053
00:19:30,480 --> 00:19:31,510
aşağıya yorum yapın ve tabii
ki bu videoyu

1054
00:19:31,510 --> 00:19:31,520
ki bu videoyu
 

1055
00:19:31,520 --> 00:19:33,350
ki bu videoyu
beğendiyseniz bir sonraki videoda beğendiğinizden emin olun.

1056
00:19:33,350 --> 00:19:33,360
beğendiyseniz bir sonraki videoda beğendiğinizden emin olun.
 

1057
00:19:33,360 --> 00:19:34,630
beğendiyseniz bir sonraki videoda beğendiğinizden emin olun.
Yineleyiciler üzerinden

1058
00:19:34,630 --> 00:19:34,640
Yineleyiciler üzerinden
 

1059
00:19:34,640 --> 00:19:36,870
Yineleyiciler üzerinden
bilgi almak istiyorsanız, bundan haberdar olmak istiyorsanız

1060
00:19:36,870 --> 00:19:37,990
bilgi almak istiyorsanız, bundan haberdar olmak istiyorsanız
 

1061
00:19:37,990 --> 00:19:38,000

 

1062
00:19:38,000 --> 00:19:40,870

abone ol düğmesine bastığınızdan emin olun ve bununla birlikte bir

1063
00:19:40,870 --> 00:19:40,880
abone ol düğmesine bastığınızdan emin olun ve bununla birlikte bir
 

1064
00:19:40,880 --> 00:19:41,590
abone ol düğmesine bastığınızdan emin olun ve bununla birlikte bir

1065
00:19:41,590 --> 00:19:41,600

 

1066
00:19:41,600 --> 00:19:52,470

sonrakinde

1067
00:19:52,470 --> 00:19:52,480
sonrakinde
 

1068
00:19:52,480 --> 00:19:54,559
sonrakinde
görüşürüz.

